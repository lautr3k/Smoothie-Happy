[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/board/board.js",
    "content": "import uuid from 'uuid/v4'\nimport boardSettings from './settings'\nimport BoardRequest from './request'\nimport requestEventTypes from '../request/event/types'\nimport BoardCommand from './command'\nimport boardTopics from './topics'\nimport BoardInfo from './info'\nimport BoardFileTree from './filetree'\nimport { normalizePath } from './util'\n\n/**\n* Board class.\n*/\nclass Board {\n  /**\n  * @param {Object} settings See {@link src/board/settings.js~boardSettings} for defaults keys/values.\n  */\n  constructor(settings = {}) {\n    /**\n    * Board settings, see {@link src/board/settings.js~boardSettings} for defaults keys/values.\n    * @type {Object}\n    * @protected\n    */\n    this.settings = Object.assign({}, boardSettings, settings)\n\n    if (! this.settings.address || typeof this.settings.address !== 'string') {\n      throw new Error('An address must be specified.')\n    }\n\n    /**\n    * Board address.\n    * @type {String}\n    * @protected\n    */\n    this.address = this.settings.address.trim()\n\n    if (this.address.startsWith('http://')) {\n      this.address = this.address.replace('http://')\n    }\n\n    if (this.address.endsWith('/')) {\n      this.address = this.address.replace(/\\/+$/g, '')\n    }\n\n    /**\n    * Unique identifier (uuid/v4).\n    * @type {String}\n    * @protected\n    */\n    this.uuid = uuid()\n\n    /**\n    * Board info parsed from version command.\n    * ```\n    * {\n    *   branch: \"edge\",\n    *   hash  : \"9ab4538\",\n    *   date  : \"Oct 10 2016 04:09:42\",\n    *   mcu   : \"LPC1769\",\n    *   clock : \"120MHz\"\n    * }\n    * ```\n    * @type {BoardInfo|null}\n    * @default null\n    * @protected\n    */\n    this.info = null\n\n    /**\n    * Flat files tree.\n    * @type {BoardFileTree}\n    * @protected\n    */\n    this.fileTree = new BoardFileTree()\n\n    /**\n    * Topic subscriptions.\n    * @type {Map}\n    * @protected\n    */\n    this.subscriptions = new Map()\n\n    /**\n    * Command queue.\n    * @type {Array}\n    * @protected\n    */\n    this.commandQueue = []\n\n    /**\n    * Command queue locked ?.\n    * @type {Boolean}\n    * @protected\n    */\n    this.commandQueueLocked = false\n\n    /**\n    * Command queue in pause ?.\n    * @type {Boolean}\n    * @protected\n    */\n    this.commandQueuePaused = false\n\n    /**\n    * Pending command (from command queue).\n    * @type {BoardCommand|null}\n    * @protected\n    */\n    this.pendingCommand = null\n\n    /**\n    * Is system halted ?\n    * @type {Boolean}\n    * @protected\n    */\n    this.alarm = false\n\n    /**\n    * Is system in MRI debug mode ?\n    * @type {Boolean}\n    * @protected\n    */\n    this.MRIMode = false\n  }\n\n  /**\n  * @typedef  {Object} BoardMessage\n  * @property {Board}  board   Board instance.\n  * @property {String} topic   Topic name, see {@link src/board/topics/index.js} for the topics list.\n  * @property {Mixed}  payload Message payload.\n  */\n\n  /**\n  * Publish message to topic, see {@link src/board/topics/index.js} for the topics list.\n  *\n  * @param  {String} topic See {@link src/board/topics/index.js} for possible values.\n  * @param  {Mixed}  [payload = null]\n  * @see {@link Board#subscribe}\n  * @see {@link Board#unsubscribe}\n  * @see {@link Board#deleteTopic}\n  */\n  publish(topic, payload = null) {\n    // fix topic case\n    topic = topic.trim().toLowerCase()\n\n    // if topic found\n    if (this.subscriptions.has(topic)) {\n      // message payload\n      let message = { board: this, topic, payload }\n\n      // call each registrered callback\n      this.subscriptions.get(topic).forEach(subscription => {\n        subscription.callback.call(subscription.context, message)\n      })\n    }\n  }\n\n  /**\n  * @typedef  {Object} BoardSubscription\n  * @property {String}        uuid     Unique identifier (uuid/v4).\n  * @property {Function}      callback A function that takes as single parameter an {@link BoardMessage} object.\n  * @property {Function|null} context  Callback context to apply on call.\n  */\n\n  /**\n  * Subscribe to topic, see {@link src/board/topics/index.js} for the topics list.\n  *\n  * @param  {String}      topic          Topic name, see {@link src/board/topics/index.js} for the topics list.\n  * @param  {Function}    callback       A function that takes as single parameter an {@link BoardMessage} object.\n  * @param  {Object|null} [context=null] Callback context to apply on call.\n  * @return {BoardSubscription}\n  * @see {@link Board#publish}\n  * @see {@link Board#unsubscribe}\n  * @see {@link Board#deleteTopic}\n  */\n  subscribe(topic, callback, context = null) {\n    // fix topic case\n    topic = topic.trim().toLowerCase()\n\n    // if first subscription, create new topic\n    if (! this.subscriptions.has(topic)) {\n      this.subscriptions.set(topic, new Map())\n    }\n\n    // fix callback context\n    context = context || callback\n\n    // create new subscription\n    let subscription = { uuid: uuid(), callback, context }\n\n    // register new subscription\n    this.subscriptions.get(topic).set(subscription.uuid, subscription)\n\n    // return the subscription\n    return subscription\n  }\n\n  /**\n  * Unsubscribe from topic.\n  *\n  * @param  {BoardSubscription|String|Array} uuid Subscription, subscription uuid or callback function.\n  * @return {Integer} Number of callback removed.\n  * @see {@link Board#publish}\n  * @see {@link Board#subscribe}\n  * @see {@link Board#deleteTopic}\n  */\n  unsubscribe(uuid) {\n    let removed = 0\n\n    // unsubscribe an array of uuid or function\n    if (Array.isArray(uuid)) {\n      uuid.forEach(id => {\n        removed += this.unsubscribe(id)\n      })\n\n      return removed\n    }\n\n    // unsubscribe from function\n    if (typeof uuid === 'function') {\n      for (let subscriptions of this.subscriptions.values()) {\n        subscriptions.forEach(subscription => {\n          if (subscription.callback === uuid) {\n            removed += this.unsubscribe(subscription.uuid)\n          }\n        })\n      }\n\n      return removed\n    }\n\n    // unsubscribe from uuid string\n    for (let topic of this.subscriptions.keys()) {\n      if (this.subscriptions.get(topic).has(uuid)) {\n        removed += this.subscriptions.get(topic).delete(uuid)\n\n        if (this.subscriptions.get(topic).size === 0) {\n          this.deleteTopic(topic)\n        }\n\n        return removed\n      }\n    }\n\n    return removed\n  }\n\n  /**\n  * Delete entire topic.\n  *\n  * @param  {String} topic Topic name, see {@link src/board/topics/index.js} for the topics list.\n  * @return {Boolean} False if not found.\n  * @see {@link Board#publish}\n  * @see {@link Board#subscribe}\n  * @see {@link Board#unsubscribe}\n  */\n  deleteTopic(topic) {\n    if (this.subscriptions.get(topic)) {\n      return this.subscriptions.delete(topic)\n    }\n\n    return false\n  }\n\n  /**\n  * Create an request.\n  *\n  * @param  {Object} [settings = {}] Request settings (see {@link BoardRequest} for more details).\n  * @return {BoardRequest}\n  */\n  createRequest(settings = {}) {\n    return new BoardRequest(this, settings)\n  }\n\n  /**\n  * Send an request to the board (GET by default).\n  *\n  * ```\n  * var board = new Board({ address: '192.168.1.102' });\n  *\n  * board.sendRequest({ url: 'sd/config' })\n  * .then(function(event) {\n  *   console.info('then:', event);\n  * })\n  * .catch(function(event) {\n  *   console.error('catch:', event);\n  * });\n  * ```\n  *\n  * @param  {Object} [settings = {}] Request settings (see {@link BoardRequest} for more details).\n  * @return {Promise<RequestEvent>}\n  */\n  sendRequest(settings = {}) {\n    return this.createRequest(settings).send()\n  }\n\n  /**\n  * Create an command.\n  *\n  * @param  {String} command         Command line.\n  * @param  {Object} [settings = {}] Request settings (see {@link BoardCommand} for more details).\n  * @return {BoardCommand}\n  */\n  createCommand(command, settings = {}) {\n    // wrap request events\n    settings.on = settings.on || {}\n\n    for (let key in requestEventTypes) {\n      let topic    = requestEventTypes[key]\n      let callback = settings.on[topic]\n\n      settings.on[topic] = event => {\n        this.publish('command.' + topic, event)\n        callback && callback(event)\n      }\n    }\n\n    let boardCommand = new BoardCommand(this, command, settings)\n    this.publish(boardTopics.COMMAND_CREATE, boardCommand)\n    return boardCommand\n  }\n\n  /**\n  * Send an command to the board.\n  *\n  * @param  {String} boardCommand\n  * @return {Promise<RequestEvent>}\n  */\n  _sendCommand(boardCommand) {\n    this.publish(boardTopics.COMMAND_SEND, boardCommand)\n\n    return boardCommand.send()\n    .then(event => {\n      this.publish(boardTopics.COMMAND_RESPONSE, event)\n      return Promise.resolve(event)\n    })\n    .catch(event => {\n      this.publish(boardTopics.COMMAND_ERROR, event)\n      return Promise.reject(event)\n    })\n  }\n\n  /**\n  * Create and send an command to the board.\n  *\n  * ```\n  * var board = new Board({ address: '192.168.1.102' });\n  *\n  * board.sendCommand('ls -s sd/')\n  * .then(function(event) {\n  *   console.info('then:', event);\n  *   console.info('data:', event.payload.data);\n  * })\n  * .catch(function(event) {\n  *   console.error('catch:', event);\n  * });\n  * ```\n  *\n  * @param  {String} command         Command line.\n  * @param  {Object} [settings = {}] Request settings (see {@link BoardCommand} for more details).\n  * @return {Promise<RequestEvent>}\n  * @see {@link Board#addCommand}\n  * @see {@link Board#pushCommand}\n  */\n  sendCommand(command, settings = {}) {\n    return this._sendCommand(this.createCommand(command, settings))\n  }\n\n  /**\n  * Create and add the command in command queue.\n  *\n  * @param  {String} command         Command line.\n  * @param  {Object} [settings = {}] Request settings (see {@link BoardCommand} for more details).\n  * @return {BoardCommand}\n  * @see {@link Board#sendCommand}\n  * @see {@link Board#pushCommand}\n  */\n  addCommand(command, settings = {}) {\n    let boardCommand = this.createCommand(command, settings)\n    this.publish(boardTopics.COMMAND_QUEUE_ADD, boardCommand)\n    this.commandQueue.push(boardCommand)\n    return boardCommand\n  }\n\n  /**\n  * Create and add the command in command queue,\n  * then process the command queue if not in pause or locked.\n  *\n  * @param  {String} command         Command line.\n  * @param  {Object} [settings = {}] Request settings (see {@link BoardCommand} for more details).\n  * @return {BoardCommand}\n  * @see {@link Board#sendCommand}\n  * @see {@link Board#addCommand}\n  */\n  pushCommand(command, settings = {}) {\n    let boardCommand = this.addCommand(command, settings)\n    this.processCommandQueue()\n    return boardCommand\n  }\n\n  /**\n  * Process command queue.\n  * @see {@link Board#pauseCommandQueue}\n  * @see {@link Board#stopCommandQueue}\n  * @see {@link Board#resumeCommandQueue}\n  * @see {@link Board#clearCommandQueue}\n  */\n  processCommandQueue() {\n    // command queue locked or empty ?\n    if (this.commandQueueLocked\n    || this.commandQueuePaused\n    || ! this.commandQueue.length) {\n      return\n    }\n\n    // lock the command queue\n    this.commandQueueLocked = true\n\n    // get the older command\n    this.pendingCommand = this.commandQueue.shift()\n\n    // end of queue\n    if (! this.pendingCommand) {\n      this.publish(boardTopics.COMMAND_QUEUE_EMPTY)\n      return\n    }\n\n    this.publish(boardTopics.COMMAND_QUEUE_SEND, this.pendingCommand)\n\n    this._sendCommand(this.pendingCommand)\n    .then(event => event)\n    .catch(event => event)\n    .then(event => {\n      // reset pending command\n      this.pendingCommand = null\n\n      // unlock the command queue\n      this.commandQueueLocked = false\n\n      // process next command in queue\n      this.processCommandQueue()\n    })\n  }\n\n  /**\n  * Pause command queue but let the pending command terminate.\n  * @see {@link Board#processCommandQueue}\n  * @see {@link Board#stopCommandQueue}\n  * @see {@link Board#resumeCommandQueue}\n  * @see {@link Board#clearCommandQueue}\n  */\n  pauseCommandQueue() {\n    this.commandQueuePaused = true\n    this.publish(boardTopics.COMMAND_QUEUE_PAUSE, this.commandQueue)\n  }\n\n  /**\n  * Abort the pending command.\n  */\n  abortPendingCommand() {\n    if (this.pendingCommand) {\n      this.pendingCommand.abort()\n      this.pendingCommand = null\n    }\n  }\n\n  /**\n  * Pause command queue and abort the pending command.\n  * @see {@link Board#processCommandQueue}\n  * @see {@link Board#pauseCommandQueue}\n  * @see {@link Board#resumeCommandQueue}\n  * @see {@link Board#clearCommandQueue}\n  */\n  stopCommandQueue() {\n    this.abortPendingCommand()\n    this.pauseCommandQueue()\n  }\n\n  /**\n  * Resume command queue.\n  * @see {@link Board#processCommandQueue}\n  * @see {@link Board#pauseCommandQueue}\n  * @see {@link Board#stopCommandQueue}\n  * @see {@link Board#clearCommandQueue}\n  */\n  resumeCommandQueue() {\n    this.commandQueuePaused = false\n    this.publish(boardTopics.COMMAND_QUEUE_RESUME, this.commandQueue)\n    this.processCommandQueue()\n  }\n\n  /**\n  * Clear command queue and abort the pending command.\n  * @see {@link Board#processCommandQueue}\n  * @see {@link Board#pauseCommandQueue}\n  * @see {@link Board#stopCommandQueue}\n  * @see {@link Board#resumeCommandQueue}\n  */\n  clearCommandQueue() {\n    this.abortPendingCommand()\n    this.publish(boardTopics.COMMAND_QUEUE_CLEAR, this.commandQueue)\n\n    this.commandQueueLocked = false\n    this.commandQueuePaused = false\n    this.commandQueue       = []\n  }\n\n  /**\n  * Get the board informations.\n  *\n  * @param  {Boolean} [refresh = false]\n  * @return {Promise<BoardInfo|RequestEvent|Error>}\n  */\n  getInfo(refresh = false) {\n    return new Promise((resolve, reject) => {\n      if (! refresh && this.info) {\n        resolve(this.info)\n      }\n\n      return this.sendCommand('version').then(event => {\n        if (event.payload.data instanceof Error) {\n          reject(event.payload.data)\n        }\n\n        this.info = new BoardInfo(event.payload.data)\n        this.publish(boardTopics.INFO_UPDATE, this.info)\n        resolve(this.info)\n      })\n      .catch(reject)\n    })\n  }\n\n  /** @typedef {Map<String, BoardFolder|BoardFile>} BoardFileList */\n\n  /**\n  * Return a flat file tree for the given path.\n  *\n  * @param  {String}  [path    = '/']    Path to list file from.\n  * @param  {Boolean} [refresh = false]  Force refresh (no cache).\n  * @param  {Boolean} [firstCall = true] Used internaly for recursion.\n  * @return {Promise<BoardFileList|RequestEvent|Error>}\n  */\n  listFiles(path = '/', refresh = false, firstCall = true) {\n    // from cache\n    path = normalizePath(path)\n\n    let tree = path === '/' ? this.fileTree : this.fileTree.list(path)\n\n    if (tree.size && ! refresh) {\n      return Promise.resolve(tree)\n    }\n\n    // try to get the directory contents\n    return this.sendCommand('ls -s ' + path).then(event => {\n      // recursion...\n      let promises = []\n\n      if (event.payload.data instanceof Error) {\n        return Promise.reject(event.payload.data)\n      }\n\n      // children collection (file or directory)\n      event.payload.data.forEach(child => {\n        // set new child\n        this.fileTree.set(child)\n\n        // get sub-directory contents\n        if (child.type === 'folder') {\n          promises.push(this.listFiles(child.path, true, false))\n        }\n      })\n\n      // wait for all promises done\n      return Promise.all(promises).then(results => {\n        let tree = this.fileTree.list(path)\n\n        if (firstCall) {\n          this.publish(boardTopics.FILETREE_UPDATE, tree)\n        }\n\n        return Promise.resolve(tree)\n      })\n    })\n  }\n\n  /**\n  * Clear state (M999).\n  *\n  * @return {Promise<RequestEvent>}\n  */\n  clearState() {\n    return this.sendCommand('M999').then(event => {\n      this.alarm = false\n      return Promise.resolve(event)\n    })\n  }\n}\n\n// Exports\nexport default Board\nexport { Board }\n",
    "static": true,
    "longname": "src/board/board.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "class",
    "name": "Board",
    "memberof": "src/board/board.js",
    "static": true,
    "longname": "src/board/board.js~Board",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/board.js",
    "importStyle": "Board",
    "description": "Board class.",
    "lineNumber": 14,
    "interface": false
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#constructor",
    "access": null,
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "settings",
        "description": "See {@link src/board/settings.js~boardSettings} for defaults keys/values."
      }
    ]
  },
  {
    "__docId__": 3,
    "kind": "member",
    "name": "settings",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#settings",
    "access": "protected",
    "description": "Board settings, see {@link src/board/settings.js~boardSettings} for defaults keys/values.",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4,
    "kind": "member",
    "name": "address",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#address",
    "access": "protected",
    "description": "Board address.",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 5,
    "kind": "member",
    "name": "address",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#address",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "member",
    "name": "address",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#address",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "member",
    "name": "uuid",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#uuid",
    "access": "protected",
    "description": "Unique identifier (uuid/v4).",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 8,
    "kind": "member",
    "name": "info",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#info",
    "access": "protected",
    "description": "Board info parsed from version command.\n```\n{\n  branch: \"edge\",\n  hash  : \"9ab4538\",\n  date  : \"Oct 10 2016 04:09:42\",\n  mcu   : \"LPC1769\",\n  clock : \"120MHz\"\n}\n```",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "BoardInfo",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 9,
    "kind": "member",
    "name": "fileTree",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#fileTree",
    "access": "protected",
    "description": "Flat files tree.",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "BoardFileTree"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 10,
    "kind": "member",
    "name": "subscriptions",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#subscriptions",
    "access": "protected",
    "description": "Topic subscriptions.",
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "Map"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 11,
    "kind": "member",
    "name": "commandQueue",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#commandQueue",
    "access": "protected",
    "description": "Command queue.",
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12,
    "kind": "member",
    "name": "commandQueueLocked",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#commandQueueLocked",
    "access": "protected",
    "description": "Command queue locked ?.",
    "lineNumber": 95,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 13,
    "kind": "member",
    "name": "commandQueuePaused",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#commandQueuePaused",
    "access": "protected",
    "description": "Command queue in pause ?.",
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 14,
    "kind": "member",
    "name": "pendingCommand",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#pendingCommand",
    "access": "protected",
    "description": "Pending command (from command queue).",
    "lineNumber": 109,
    "type": {
      "nullable": null,
      "types": [
        "BoardCommand",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 15,
    "kind": "member",
    "name": "alarm",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#alarm",
    "access": "protected",
    "description": "Is system halted ?",
    "lineNumber": 116,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 16,
    "kind": "member",
    "name": "MRIMode",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#MRIMode",
    "access": "protected",
    "description": "Is system in MRI debug mode ?",
    "lineNumber": 123,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 17,
    "kind": "typedef",
    "name": "BoardMessage",
    "memberof": "src/board/board.js~Board",
    "static": true,
    "longname": "src/board/board.js~Board.BoardMessage",
    "access": null,
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Board"
        ],
        "spread": false,
        "optional": false,
        "name": "board",
        "description": "Board instance."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "topic",
        "description": "Topic name, see {@link src/board/topics/index.js} for the topics list."
      },
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": "Message payload."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "BoardMessage"
    }
  },
  {
    "__docId__": 18,
    "kind": "method",
    "name": "publish",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#publish",
    "access": null,
    "description": "Publish message to topic, see {@link src/board/topics/index.js} for the topics list.",
    "see": [
      "{@link Board#subscribe}",
      "{@link Board#unsubscribe}",
      "{@link Board#deleteTopic}"
    ],
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "topic",
        "description": "See {@link src/board/topics/index.js} for possible values."
      },
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " null",
        "defaultRaw": null,
        "name": "payload",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 19,
    "kind": "typedef",
    "name": "BoardSubscription",
    "memberof": "src/board/board.js~Board",
    "static": true,
    "longname": "src/board/board.js~Board.BoardSubscription",
    "access": null,
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "uuid",
        "description": "Unique identifier (uuid/v4)."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "A function that takes as single parameter an {@link BoardMessage} object."
      },
      {
        "nullable": null,
        "types": [
          "Function",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Callback context to apply on call."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "BoardSubscription"
    }
  },
  {
    "__docId__": 20,
    "kind": "method",
    "name": "subscribe",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#subscribe",
    "access": null,
    "description": "Subscribe to topic, see {@link src/board/topics/index.js} for the topics list.",
    "see": [
      "{@link Board#publish}",
      "{@link Board#unsubscribe}",
      "{@link Board#deleteTopic}"
    ],
    "lineNumber": 176,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "topic",
        "description": "Topic name, see {@link src/board/topics/index.js} for the topics list."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "A function that takes as single parameter an {@link BoardMessage} object."
      },
      {
        "nullable": null,
        "types": [
          "Object",
          "null"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "context",
        "description": "Callback context to apply on call."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BoardSubscription"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 21,
    "kind": "method",
    "name": "unsubscribe",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#unsubscribe",
    "access": null,
    "description": "Unsubscribe from topic.",
    "see": [
      "{@link Board#publish}",
      "{@link Board#subscribe}",
      "{@link Board#deleteTopic}"
    ],
    "lineNumber": 207,
    "params": [
      {
        "nullable": null,
        "types": [
          "BoardSubscription",
          "String",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "uuid",
        "description": "Subscription, subscription uuid or callback function."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "Number of callback removed."
    }
  },
  {
    "__docId__": 22,
    "kind": "method",
    "name": "deleteTopic",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#deleteTopic",
    "access": null,
    "description": "Delete entire topic.",
    "see": [
      "{@link Board#publish}",
      "{@link Board#subscribe}",
      "{@link Board#unsubscribe}"
    ],
    "lineNumber": 257,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "topic",
        "description": "Topic name, see {@link src/board/topics/index.js} for the topics list."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "False if not found."
    }
  },
  {
    "__docId__": 23,
    "kind": "method",
    "name": "createRequest",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#createRequest",
    "access": null,
    "description": "Create an request.",
    "lineNumber": 271,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "settings",
        "description": "Request settings (see {@link BoardRequest} for more details)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BoardRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 24,
    "kind": "method",
    "name": "sendRequest",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#sendRequest",
    "access": null,
    "description": "Send an request to the board (GET by default).\n\n```\nvar board = new Board({ address: '192.168.1.102' });\n\nboard.sendRequest({ url: 'sd/config' })\n.then(function(event) {\n  console.info('then:', event);\n})\n.catch(function(event) {\n  console.error('catch:', event);\n});\n```",
    "lineNumber": 293,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "settings",
        "description": "Request settings (see {@link BoardRequest} for more details)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<RequestEvent>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 25,
    "kind": "method",
    "name": "createCommand",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#createCommand",
    "access": null,
    "description": "Create an command.",
    "lineNumber": 304,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": "Command line."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "settings",
        "description": "Request settings (see {@link BoardCommand} for more details)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BoardCommand"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 26,
    "kind": "method",
    "name": "_sendCommand",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#_sendCommand",
    "access": null,
    "description": "Send an command to the board.",
    "lineNumber": 329,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "boardCommand",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<RequestEvent>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 27,
    "kind": "method",
    "name": "sendCommand",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#sendCommand",
    "access": null,
    "description": "Create and send an command to the board.\n\n```\nvar board = new Board({ address: '192.168.1.102' });\n\nboard.sendCommand('ls -s sd/')\n.then(function(event) {\n  console.info('then:', event);\n  console.info('data:', event.payload.data);\n})\n.catch(function(event) {\n  console.error('catch:', event);\n});\n```",
    "see": [
      "{@link Board#addCommand}",
      "{@link Board#pushCommand}"
    ],
    "lineNumber": 365,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": "Command line."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "settings",
        "description": "Request settings (see {@link BoardCommand} for more details)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<RequestEvent>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 28,
    "kind": "method",
    "name": "addCommand",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#addCommand",
    "access": null,
    "description": "Create and add the command in command queue.",
    "see": [
      "{@link Board#sendCommand}",
      "{@link Board#pushCommand}"
    ],
    "lineNumber": 378,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": "Command line."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "settings",
        "description": "Request settings (see {@link BoardCommand} for more details)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BoardCommand"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 29,
    "kind": "method",
    "name": "pushCommand",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#pushCommand",
    "access": null,
    "description": "Create and add the command in command queue,\nthen process the command queue if not in pause or locked.",
    "see": [
      "{@link Board#sendCommand}",
      "{@link Board#addCommand}"
    ],
    "lineNumber": 395,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": "Command line."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "settings",
        "description": "Request settings (see {@link BoardCommand} for more details)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BoardCommand"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 30,
    "kind": "method",
    "name": "processCommandQueue",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#processCommandQueue",
    "access": null,
    "description": "Process command queue.",
    "see": [
      "{@link Board#pauseCommandQueue}",
      "{@link Board#stopCommandQueue}",
      "{@link Board#resumeCommandQueue}",
      "{@link Board#clearCommandQueue}"
    ],
    "lineNumber": 408,
    "params": []
  },
  {
    "__docId__": 31,
    "kind": "member",
    "name": "commandQueueLocked",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#commandQueueLocked",
    "access": null,
    "description": null,
    "lineNumber": 417,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "member",
    "name": "pendingCommand",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#pendingCommand",
    "access": null,
    "description": null,
    "lineNumber": 420,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "member",
    "name": "pendingCommand",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#pendingCommand",
    "access": null,
    "description": null,
    "lineNumber": 435,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "member",
    "name": "commandQueueLocked",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#commandQueueLocked",
    "access": null,
    "description": null,
    "lineNumber": 438,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "method",
    "name": "pauseCommandQueue",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#pauseCommandQueue",
    "access": null,
    "description": "Pause command queue but let the pending command terminate.",
    "see": [
      "{@link Board#processCommandQueue}",
      "{@link Board#stopCommandQueue}",
      "{@link Board#resumeCommandQueue}",
      "{@link Board#clearCommandQueue}"
    ],
    "lineNumber": 452,
    "params": []
  },
  {
    "__docId__": 36,
    "kind": "member",
    "name": "commandQueuePaused",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#commandQueuePaused",
    "access": null,
    "description": null,
    "lineNumber": 453,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 37,
    "kind": "method",
    "name": "abortPendingCommand",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#abortPendingCommand",
    "access": null,
    "description": "Abort the pending command.",
    "lineNumber": 460,
    "params": []
  },
  {
    "__docId__": 38,
    "kind": "member",
    "name": "pendingCommand",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#pendingCommand",
    "access": null,
    "description": null,
    "lineNumber": 463,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 39,
    "kind": "method",
    "name": "stopCommandQueue",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#stopCommandQueue",
    "access": null,
    "description": "Pause command queue and abort the pending command.",
    "see": [
      "{@link Board#processCommandQueue}",
      "{@link Board#pauseCommandQueue}",
      "{@link Board#resumeCommandQueue}",
      "{@link Board#clearCommandQueue}"
    ],
    "lineNumber": 474,
    "params": []
  },
  {
    "__docId__": 40,
    "kind": "method",
    "name": "resumeCommandQueue",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#resumeCommandQueue",
    "access": null,
    "description": "Resume command queue.",
    "see": [
      "{@link Board#processCommandQueue}",
      "{@link Board#pauseCommandQueue}",
      "{@link Board#stopCommandQueue}",
      "{@link Board#clearCommandQueue}"
    ],
    "lineNumber": 486,
    "params": []
  },
  {
    "__docId__": 41,
    "kind": "member",
    "name": "commandQueuePaused",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#commandQueuePaused",
    "access": null,
    "description": null,
    "lineNumber": 487,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 42,
    "kind": "method",
    "name": "clearCommandQueue",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#clearCommandQueue",
    "access": null,
    "description": "Clear command queue and abort the pending command.",
    "see": [
      "{@link Board#processCommandQueue}",
      "{@link Board#pauseCommandQueue}",
      "{@link Board#stopCommandQueue}",
      "{@link Board#resumeCommandQueue}"
    ],
    "lineNumber": 499,
    "params": []
  },
  {
    "__docId__": 43,
    "kind": "member",
    "name": "commandQueueLocked",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#commandQueueLocked",
    "access": null,
    "description": null,
    "lineNumber": 503,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "member",
    "name": "commandQueuePaused",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#commandQueuePaused",
    "access": null,
    "description": null,
    "lineNumber": 504,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 45,
    "kind": "member",
    "name": "commandQueue",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#commandQueue",
    "access": null,
    "description": null,
    "lineNumber": 505,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "method",
    "name": "getInfo",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#getInfo",
    "access": null,
    "description": "Get the board informations.",
    "lineNumber": 514,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " false",
        "defaultRaw": false,
        "name": "refresh",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<BoardInfo|RequestEvent|Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 47,
    "kind": "member",
    "name": "info",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#info",
    "access": null,
    "description": null,
    "lineNumber": 525,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "typedef",
    "name": "BoardFileList",
    "memberof": "src/board/board.js~Board",
    "static": true,
    "longname": "src/board/board.js~Board.BoardFileList",
    "access": null,
    "description": null,
    "type": {
      "types": [
        "Map<String, BoardFolder|BoardFile>"
      ],
      "optional": false,
      "name": "BoardFileList"
    }
  },
  {
    "__docId__": 49,
    "kind": "method",
    "name": "listFiles",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#listFiles",
    "access": null,
    "description": "Return a flat file tree for the given path.",
    "lineNumber": 543,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " '/'",
        "defaultRaw": " '/'",
        "name": "path",
        "description": "Path to list file from."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " false",
        "defaultRaw": false,
        "name": "refresh",
        "description": "Force refresh (no cache)."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " true",
        "defaultRaw": true,
        "name": "firstCall",
        "description": "Used internaly for recursion."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<BoardFileList|RequestEvent|Error>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 50,
    "kind": "method",
    "name": "clearState",
    "memberof": "src/board/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/board.js~Board#clearState",
    "access": null,
    "description": "Clear state (M999).",
    "lineNumber": 591,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<RequestEvent>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "alarm",
    "memberof": "src/board/board.js~Board",
    "static": false,
    "longname": "src/board/board.js~Board#alarm",
    "access": null,
    "description": null,
    "lineNumber": 593,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "file",
    "name": "src/board/command.js",
    "content": "import BoardRequest from './request'\nimport * as boardCommands from './commands'\nimport boardTopics from './topics'\n\n/**\n* Board request.\n* @extends {BoardRequest}\n*/\nclass BoardCommand extends BoardRequest {\n  /**\n  * @param {Board}  board       Board instance.\n  * @param {Board}  commandLine Command line, see {@link src/board/commands/index.js} for a list of implemented commands.\n  * @param {Object} settings    See {@link src/board/settings.js~boardSettings}.request for defaults keys/values.\n  * @param {Object} [settings.parseResponse = true] See {@link src/board/settings.js~boardSettings}.request for defaults keys/values.\n  */\n  constructor(board, commandLine, settings = {}) {\n    // Normalize and split the command line\n    commandLine = commandLine.trim().replace(/ +/g, ' ')\n\n    let commandArgs = commandLine.split(' ')\n    let commandName = commandArgs.shift().toLowerCase()\n\n    // parse response by default\n    if (settings.parseResponse === undefined) {\n      settings.parseResponse = true\n    }\n\n    // response...\n    let response = r => {\n      let raw = r.trim()\n\n      if (raw.startsWith('error:Unsupported command')) {\n        throw new Error('Unsupported command \"' + commandName + '\".')\n      }\n\n      // alarm/error ?\n      let test = raw.slice(0, 30).toLowerCase()\n\n      // ! fire return empty string if laser module not enabled, even if state is not in alarm mode... !\n      if (! raw.length && ['fire', 'play', 'progress', 'abort', 'suspend', 'resume'].includes(commandName)) {\n        test = '!!'\n      }\n\n      if (test === '!!' || test.startsWith('alarm')) {\n        if (! board.alarm) {\n          board.alarm = true\n          board.publish(boardTopics.STATE_ALARM)\n        }\n\n        throw new Error('Alarm! System probably halted.')\n      }\n\n      if (commandName === 'M999') {\n        board.publish(boardTopics.STATE_CLEAR, test !== 'ok')\n      }\n\n      // response parser\n      let parserName = commandName\n\n      if (parserName.startsWith('config-')) {\n        parserName = 'config_' + parserName.slice(7)\n      }\n\n      let responseParser = boardCommands['cmd_' + parserName]\n\n      if (! responseParser && settings.parseResponse) {\n        throw new Error('Sorry! The \"' + commandName + '\" command is not (yet) implemented.')\n      }\n\n      // return (parsed) response\n      let args = [].concat(commandArgs) // make a copy\n\n      return settings.parseResponse ? responseParser(r, args) : r\n    }\n\n    // call parent constructor\n    super(board, Object.assign({}, board.settings.request, settings, {\n      data   : commandLine + '\\n',\n      url    : 'command',\n      method : 'POST',\n      filters: { response }\n    }))\n\n    /**\n    * Board instance.\n    * @type {Board}\n    * @protected\n    */\n    this.board = board\n\n    /**\n    * Command line.\n    * @type {String}\n    * @protected\n    */\n    this.commandLine = commandLine\n\n    /**\n    * Command name.\n    * @type {String}\n    * @protected\n    */\n    this.commandName = commandName\n\n    /**\n    * Command arguments.\n    * @type {Array}\n    * @protected\n    */\n    this.commandArgs = commandArgs\n  }\n\n  /**\n  * Send the request and return a Promise.\n  *\n  * @return {Promise<RequestEvent>}\n  */\n  send() {\n    if (this.commandName === 'break') {\n      this.board.MRIMode = true\n      this.board.publish(boardTopics.STATE_MRI)\n      // Fix for break command never respond\n      this.settings.timeout     = 5000 // 5 seconds\n      this.settings.maxAttempts = 1\n    }\n\n    return super.send()\n  }\n}\n\n// Exports\nexport default BoardCommand\nexport { BoardCommand }\n",
    "static": true,
    "longname": "src/board/command.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 53,
    "kind": "class",
    "name": "BoardCommand",
    "memberof": "src/board/command.js",
    "static": true,
    "longname": "src/board/command.js~BoardCommand",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/command.js",
    "importStyle": "BoardCommand",
    "description": "Board request.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "BoardRequest"
    ]
  },
  {
    "__docId__": 54,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/board/command.js~BoardCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/command.js~BoardCommand#constructor",
    "access": null,
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Board"
        ],
        "spread": false,
        "optional": false,
        "name": "board",
        "description": "Board instance."
      },
      {
        "nullable": null,
        "types": [
          "Board"
        ],
        "spread": false,
        "optional": false,
        "name": "commandLine",
        "description": "Command line, see {@link src/board/commands/index.js} for a list of implemented commands."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "settings",
        "description": "See {@link src/board/settings.js~boardSettings}.request for defaults keys/values."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " true",
        "defaultRaw": true,
        "name": "settings.parseResponse",
        "description": "See {@link src/board/settings.js~boardSettings}.request for defaults keys/values."
      }
    ]
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "board",
    "memberof": "src/board/command.js~BoardCommand",
    "static": false,
    "longname": "src/board/command.js~BoardCommand#board",
    "access": "protected",
    "description": "Board instance.",
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "Board"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "commandLine",
    "memberof": "src/board/command.js~BoardCommand",
    "static": false,
    "longname": "src/board/command.js~BoardCommand#commandLine",
    "access": "protected",
    "description": "Command line.",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "commandName",
    "memberof": "src/board/command.js~BoardCommand",
    "static": false,
    "longname": "src/board/command.js~BoardCommand#commandName",
    "access": "protected",
    "description": "Command name.",
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "commandArgs",
    "memberof": "src/board/command.js~BoardCommand",
    "static": false,
    "longname": "src/board/command.js~BoardCommand#commandArgs",
    "access": "protected",
    "description": "Command arguments.",
    "lineNumber": 110,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "send",
    "memberof": "src/board/command.js~BoardCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/command.js~BoardCommand#send",
    "access": null,
    "description": "Send the request and return a Promise.",
    "lineNumber": 118,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<RequestEvent>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "src/board/commands/abort.js",
    "content": "/**\r\n* Parse `abort` command response.\r\n*\r\n* ### on success\r\n* ```\r\n* return 'Aborted! Please turn any heaters off manually.'\r\n* ```\r\n* ### on error\r\n* ```\r\n* return Error: 'Not currently playing.'\r\n* return Error: 'Unknown response string.'\r\n* ```\r\n* @param  {String}   raw  Raw command response string.\r\n* @param  {String[]} args Command arguments.\r\n* @return {String|Error}\r\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L266\r\n* @see https://github.com/Smoothieware/Smoothieware/blob/1f73659f0b0cb6142e395c3d4d7dcbaadbac870a/src/modules/utils/player/Player.cpp#L359\r\n*/\r\nexport function cmd_abort(raw, args) {\r\n  // raw response\r\n  raw = raw.trim()\r\n\r\n  if (raw.startsWith('Not currently playing')) {\r\n    return new Error('Not currently playing.')\r\n  }\r\n\r\n  if (! raw.startsWith('Aborted playing or paused file')) {\r\n    return new Error('Unknown response string.')\r\n  }\r\n\r\n  return 'Aborted! Please turn any heaters off manually.'\r\n}\r\n",
    "static": true,
    "longname": "src/board/commands/abort.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "cmd_abort",
    "memberof": "src/board/commands/abort.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/abort.js~cmd_abort",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/abort.js",
    "importStyle": "{cmd_abort}",
    "description": "Parse `abort` command response.\n\n### on success\n```\nreturn 'Aborted! Please turn any heaters off manually.'\n```\n### on error\n```\nreturn Error: 'Not currently playing.'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L266",
      "https://github.com/Smoothieware/Smoothieware/blob/1f73659f0b0cb6142e395c3d4d7dcbaadbac870a/src/modules/utils/player/Player.cpp#L359"
    ],
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/board/commands/break.js",
    "content": "/**\n* Parse `break` command response.\n*\n* !!! Smoothie never respond when calling this command.\n*\n* ### on success\n* ```\n* return 'Entering MRI debug mode...'\n* ```\n* ### on error\n* ```\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L661\n*/\nexport function cmd_break(raw, args) {\n  raw = raw.trim()\n\n  if (raw !== 'Entering MRI debug mode...') {\n    return new Error('Unknown response string.')\n  }\n\n  return raw\n}\n",
    "static": true,
    "longname": "src/board/commands/break.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "cmd_break",
    "memberof": "src/board/commands/break.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/break.js~cmd_break",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/break.js",
    "importStyle": "{cmd_break}",
    "description": "Parse `break` command response.\n\n!!! Smoothie never respond when calling this command.\n\n### on success\n```\nreturn 'Entering MRI debug mode...'\n```\n### on error\n```\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L661"
    ],
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "src/board/commands/calc_thermistor.js",
    "content": "/**\n* Calculate the Steinhart Hart coefficients for a thermistor.\n*\n* ### on success\n* ```\n* return {\n*   \"saved\": false, // true if -s param provided, else false\n*   \"target\": null, // termistor num if -s param provided, else null\n*   \"I\"     : 0.000722376862540841,\n*   \"J\"     : 0.000722376862540841,\n*   \"K\"     : 0.000722376862540841\n* }\n* ```\n* ### on error\n* ```\n* return Error: 'Usage: calc_thermistor [-s0] T1,R1,T2,R2,T3,R3.'\n* return Error: 'Unknown response string.'\n* return Error: 'Invalid input values.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see http://smoothieware.org/steinharthart\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#878\n*/\nexport function cmd_calc_thermistor(raw, args) {\n  raw = raw.trim()\n\n  if (raw.startsWith('Usage: calc_thermistor')) {\n    return new Error('Usage: calc_thermistor [-s0] T1,R1,T2,R2,T3,R3.')\n  }\n\n  let matches = raw.match(/Steinhart Hart coefficients: *I(.*)J(.*)K(.*)/)\n\n  if (! matches) {\n    return new Error('Unknown response string.')\n  }\n\n  matches.shift()\n\n  matches = matches.map(match => parseFloat(match.trim()))\n\n  if (matches.includes(NaN)) {\n    return new Error('Invalid input values.')\n  }\n\n  let saved  = args[0].startsWith('-s')\n  let target = (saved && args[0][2]) || null\n\n  return { saved, target, I: matches[0], J: matches[0], K: matches[0] }\n}\n",
    "static": true,
    "longname": "src/board/commands/calc_thermistor.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "cmd_calc_thermistor",
    "memberof": "src/board/commands/calc_thermistor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/calc_thermistor.js~cmd_calc_thermistor",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/calc_thermistor.js",
    "importStyle": "{cmd_calc_thermistor}",
    "description": "Calculate the Steinhart Hart coefficients for a thermistor.\n\n### on success\n```\nreturn {\n  \"saved\": false, // true if -s param provided, else false\n  \"target\": null, // termistor num if -s param provided, else null\n  \"I\"     : 0.000722376862540841,\n  \"J\"     : 0.000722376862540841,\n  \"K\"     : 0.000722376862540841\n}\n```\n### on error\n```\nreturn Error: 'Usage: calc_thermistor [-s0] T1,R1,T2,R2,T3,R3.'\nreturn Error: 'Unknown response string.'\nreturn Error: 'Invalid input values.'\n```",
    "see": [
      "http://smoothieware.org/steinharthart",
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#878"
    ],
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "src/board/commands/cat.js",
    "content": "import { normalizePath } from '../util'\n\n/**\n* Get file content.\n*\n* ### on success\n* ```\n* return \"Raw file contents as text.\"\n* ```\n* ### on error\n* ```\n* return Error: 'File not found \"xxx\".'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L331\n*/\nexport function cmd_cat(raw, args) {\n  let source = normalizePath(args[0] || '')\n\n  if (raw.trim().startsWith('File not found')) {\n    return new Error('File not found \"' + source + '\".')\n  }\n\n  return raw\n}\n",
    "static": true,
    "longname": "src/board/commands/cat.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "cmd_cat",
    "memberof": "src/board/commands/cat.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/cat.js~cmd_cat",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/cat.js",
    "importStyle": "{cmd_cat}",
    "description": "Get file content.\n\n### on success\n```\nreturn \"Raw file contents as text.\"\n```\n### on error\n```\nreturn Error: 'File not found \"xxx\".'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L331"
    ],
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/board/commands/cd.js",
    "content": "import { normalizePath } from '../util'\n\n/**\n* Change current folder.\n*\n* ### on success\n* ```\n* return \"ok\"\n* ```\n* ### on error\n* ```\n* return Error: 'Could not open \"xxx\" directory.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L358\n*/\nexport function cmd_cd(raw, args) {\n  let source = normalizePath(args[0] || '')\n\n  if (raw.trim().startsWith('Could not open directory')) {\n    return new Error('Could not open \"' + source + '\" directory.')\n  }\n\n  return 'ok'\n}\n",
    "static": true,
    "longname": "src/board/commands/cd.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "cmd_cd",
    "memberof": "src/board/commands/cd.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/cd.js~cmd_cd",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/cd.js",
    "importStyle": "{cmd_cd}",
    "description": "Change current folder.\n\n### on success\n```\nreturn \"ok\"\n```\n### on error\n```\nreturn Error: 'Could not open \"xxx\" directory.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L358"
    ],
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/board/commands/config_get.js",
    "content": "/**\n* Parse `config_get` command response.\n*\n* ### on success\n* ```\n* return {\n*   \"source\" : \"sd\", // or cache\n*   \"setting\": \"default_feed_rate\",\n*   \"value\"  : \"4000\"\n* }\n* ```\n* ### on error\n* ```\n* return Error: 'Undefined \"xxx\" setting in \"yyy\".'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L257\n* @see https://github.com/Smoothieware/Smoothieware/blob/08e30d628e00333e274757bb6feac8b5e5541125/src/modules/utils/configurator/Configurator.cpp#L30\n* @see https://github.com/Smoothieware/Smoothieware/blob/08e30d628e00333e274757bb6feac8b5e5541125/src/libs/Config.cpp#L31\n*/\nexport function cmd_config_get(raw, args) {\n  raw = raw.trim()\n\n  let matches = raw.match(/(.*): (.*) is not in config/)\n\n  if (matches) {\n    let source  = matches[1].trim()\n    let setting = matches[2].trim()\n\n    if (source === 'cached') {\n      source = 'cache'\n    }\n\n    return new Error('Undefined \"' + setting + '\" setting in \"' + source + '\".')\n  }\n\n  matches = raw.match(/(.*): (.*) is set to (.*)/)\n\n  if (! matches) {\n    return new Error('Unknown response string.')\n  }\n\n  let source = matches[1].trim()\n\n  if (source === 'cached') {\n      source = 'cache'\n    }\n\n  return {\n    source,\n    setting: matches[2].trim(),\n    value  : matches[3].trim()\n  }\n}\n",
    "static": true,
    "longname": "src/board/commands/config_get.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "cmd_config_get",
    "memberof": "src/board/commands/config_get.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/config_get.js~cmd_config_get",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/config_get.js",
    "importStyle": "{cmd_config_get}",
    "description": "Parse `config_get` command response.\n\n### on success\n```\nreturn {\n  \"source\" : \"sd\", // or cache\n  \"setting\": \"default_feed_rate\",\n  \"value\"  : \"4000\"\n}\n```\n### on error\n```\nreturn Error: 'Undefined \"xxx\" setting in \"yyy\".'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L257",
      "https://github.com/Smoothieware/Smoothieware/blob/08e30d628e00333e274757bb6feac8b5e5541125/src/modules/utils/configurator/Configurator.cpp#L30",
      "https://github.com/Smoothieware/Smoothieware/blob/08e30d628e00333e274757bb6feac8b5e5541125/src/libs/Config.cpp#L31"
    ],
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "src/board/commands/config_load.js",
    "content": "/**\n* Parse `config_load` command response.\n*\n* ### on success\n* ```\n* return '...'\n* ```\n* ### on error\n* ```\n* return Error: 'Usage: config-load load|unload|dump|checksum'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L263\n* @see https://github.com/Smoothieware/Smoothieware/blob/08e30d628e00333e274757bb6feac8b5e5541125/src/modules/utils/configurator/Configurator.cpp#L106\n*/\nexport function cmd_config_load(raw, args) {\n  raw = raw.trim()\n\n  if (raw.startsWith('unsupported option:')) {\n    return new Error('Usage: config-load load|unload|dump|checksum')\n  }\n\n  if (raw.startsWith('config cache loaded') || raw.startsWith('config cache unloaded')) {\n    return true\n  }\n\n  let matches = raw.match(/^checksum of (.*) = (.*)/)\n\n  if (matches) {\n    return {\n      setting : matches[1].trim(),\n      checksum: matches[2].trim()\n    }\n  }\n\n  let config = []\n  let lines  = raw.split('\\n')\n\n  lines.forEach(line => {\n    line    = line.trim()\n    matches = line.match(/^([0-9]+) - (.*) : '(.*)' - found: (.*), default: (.*), default-double: (.*), default-int: (.*)/)\n\n    if (! matches) {\n      return new Error('Unknown response string.')\n    }\n\n    config.push({\n      checksum     : matches[2],\n      value        : matches[3],\n      found        : matches[4],\n      default      : matches[5],\n      defaultDouble: matches[6],\n      defaultInt   : matches[7]\n    })\n  })\n\n  if (config.length) {\n    return config\n  }\n\n  return new Error('Unknown response string.')\n}\n",
    "static": true,
    "longname": "src/board/commands/config_load.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "cmd_config_load",
    "memberof": "src/board/commands/config_load.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/config_load.js~cmd_config_load",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/config_load.js",
    "importStyle": "{cmd_config_load}",
    "description": "Parse `config_load` command response.\n\n### on success\n```\nreturn '...'\n```\n### on error\n```\nreturn Error: 'Usage: config-load load|unload|dump|checksum'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L263",
      "https://github.com/Smoothieware/Smoothieware/blob/08e30d628e00333e274757bb6feac8b5e5541125/src/modules/utils/configurator/Configurator.cpp#L106"
    ],
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "src/board/commands/config_set.js",
    "content": "/**\n* Parse `config_set` command response.\n*\n* ### on success\n* ```\n* return return {\n*   \"source\" : \"sd\",\n*   \"setting\": \"default_feed_rate\",\n*   \"value\"  : \"4000\"\n* }\n* ```\n* ### on error\n* ```\n* return Error: 'Usage: config-set source setting value.'\n* return Error: 'Undefined source \"xxx\".'\n* return Error: 'Not enough space in \"xxx\" to overwrite \"yyy\" setting.'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L260\n* @see https://github.com/Smoothieware/Smoothieware/blob/08e30d628e00333e274757bb6feac8b5e5541125/src/modules/utils/configurator/Configurator.cpp#L68\n*/\nexport function cmd_config_set(raw, args) {\n  raw = raw.trim()\n\n  if (raw.startsWith('Usage: config-set')) {\n    return new Error('Usage: config-set source setting value')\n  }\n\n  let matches = raw.match(/(.*): (.*) has been set to (.*)/)\n\n  if (matches) {\n    return {\n      source : matches[1].trim(),\n      setting: matches[2].trim(),\n      value  : matches[3].trim()\n    }\n  }\n\n  matches = raw.match(/(.*) source does not exist/)\n\n  if (matches) {\n    return new Error('Undefined source \"' + matches[1] + '\".')\n  }\n\n  matches = raw.match(/(.*): (.*) not enough space/)\n\n  if (matches) {\n    return new Error('Not enough space in \"' + matches[1].trim() + '\" to overwrite \"' + matches[2].trim() + '\" setting.')\n  }\n\n  return new Error('Unknown response string.')\n}\n",
    "static": true,
    "longname": "src/board/commands/config_set.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "cmd_config_set",
    "memberof": "src/board/commands/config_set.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/config_set.js~cmd_config_set",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/config_set.js",
    "importStyle": "{cmd_config_set}",
    "description": "Parse `config_set` command response.\n\n### on success\n```\nreturn return {\n  \"source\" : \"sd\",\n  \"setting\": \"default_feed_rate\",\n  \"value\"  : \"4000\"\n}\n```\n### on error\n```\nreturn Error: 'Usage: config-set source setting value.'\nreturn Error: 'Undefined source \"xxx\".'\nreturn Error: 'Not enough space in \"xxx\" to overwrite \"yyy\" setting.'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L260",
      "https://github.com/Smoothieware/Smoothieware/blob/08e30d628e00333e274757bb6feac8b5e5541125/src/modules/utils/configurator/Configurator.cpp#L68"
    ],
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "src/board/commands/dfu.js",
    "content": "/**\n* Parse `dfu` command response.\n*\n* ### on success\n* ```\n* return 'Entering boot mode...'\n* ```\n* ### on error\n* ```\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L661\n*/\nexport function cmd_dfu(raw, args) {\n  raw = raw.trim()\n\n  if (raw !== 'Entering boot mode...') {\n    return new Error('Unknown response string.')\n  }\n\n  return raw\n}\n",
    "static": true,
    "longname": "src/board/commands/dfu.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "cmd_dfu",
    "memberof": "src/board/commands/dfu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/dfu.js~cmd_dfu",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/dfu.js",
    "importStyle": "{cmd_dfu}",
    "description": "Parse `dfu` command response.\n\n### on success\n```\nreturn 'Entering boot mode...'\n```\n### on error\n```\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L661"
    ],
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "src/board/commands/fire.js",
    "content": "/**\n* Fire laser.\n*\n* ! fire return empty string if laser module not enabled, even if state is not in alarm mode... !\n* This parser will never called in this case...\n*\n* ### on success\n* ```\n* return \"...\"\n* ```\n* ### on error\n* ```\n* return Error: 'Usage: Usage: fire power|off.'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L269\n* @see https://github.com/Smoothieware/Smoothieware/blob/dcf0252ef5d048f22949c07224e10cc8dde341cc/src/modules/tools/laser/Laser.cpp#L134\n*/\nexport function cmd_fire(raw, args) {\n  raw = raw.trim()\n\n  if (raw.startsWith('Usage: fire power')) {\n    return new Error('Usage: fire power|off.')\n  }\n\n  if (raw.startsWith('turning laser off')) {\n    return { fire: false, power: 0 }\n  }\n\n  // WARNING: Firing laser at %1.2f%% power, entering manual mode use fire off to return to auto mode\n  let matches = raw.match(/^WARNING: Firing laser at ([0-9\\.]+)%/)\n\n  if (! matches) {\n    return new Error('Unknown response string.')\n  }\n\n  return { fire: true, power: parseInt(matches[1]) }\n}\n",
    "static": true,
    "longname": "src/board/commands/fire.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "cmd_fire",
    "memberof": "src/board/commands/fire.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/fire.js~cmd_fire",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/fire.js",
    "importStyle": "{cmd_fire}",
    "description": "Fire laser.\n\n! fire return empty string if laser module not enabled, even if state is not in alarm mode... !\nThis parser will never called in this case...\n\n### on success\n```\nreturn \"...\"\n```\n### on error\n```\nreturn Error: 'Usage: Usage: fire power|off.'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L269",
      "https://github.com/Smoothieware/Smoothieware/blob/dcf0252ef5d048f22949c07224e10cc8dde341cc/src/modules/tools/laser/Laser.cpp#L134"
    ],
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 80,
    "kind": "file",
    "name": "src/board/commands/get.js",
    "content": "import { get_temp } from './get_temp'\nimport { get_pos } from './get_pos'\nimport { get_wcs } from './get_wcs'\nimport { get_state } from './get_state'\nimport { get_status } from './get_status'\nimport { get_ik } from './get_ik'\nimport { get_fk } from './get_fk'\n\n/**\n* Get command `temp|pos|wcs|state|status|fk|ik`.\n*\n* - get temp [bed|hotend]\n* - get fk|ik [-m] x[,y,z]\n*\n* ### on success\n* ```\n* return \"...\"\n* ```\n* ### on error\n* ```\n* return Error: 'Unknown option \"xxx\".'\n* return Error: 'Sorry! The \"get xxx\" command is not (yet) implemented.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Mixed|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#741\n*/\nexport function cmd_get(raw, args) {\n  // raw response\n  raw = raw.trim()\n\n  // option\n  let option = (args.shift() || '').toLowerCase()\n\n  // file not found\n  if (raw.startsWith('error:unknown option')) {\n    return new Error('Unknown option \"' + option + '\".')\n  }\n\n  let func\n\n  switch (option) {\n    case 'temp':\n      func = get_temp\n      break\n    case 'pos':\n      func = get_pos\n      break\n    case 'wcs':\n      func = get_wcs\n      break\n    case 'state':\n      func = get_state\n      break\n    case 'status':\n      func = get_status\n      break\n    case 'ik':\n      func = get_ik\n      break\n    case 'fk':\n      func = get_fk\n      break\n    default:\n     return new Error('Sorry! The \"get ' + option + '\" command is not (yet) implemented.')\n  }\n\n  return func(raw, args)\n}\n",
    "static": true,
    "longname": "src/board/commands/get.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "cmd_get",
    "memberof": "src/board/commands/get.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/get.js~cmd_get",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/get.js",
    "importStyle": "{cmd_get}",
    "description": "Get command `temp|pos|wcs|state|status|fk|ik`.\n\n- get temp [bed|hotend]\n- get fk|ik [-m] x[,y,z]\n\n### on success\n```\nreturn \"...\"\n```\n### on error\n```\nreturn Error: 'Unknown option \"xxx\".'\nreturn Error: 'Sorry! The \"get xxx\" command is not (yet) implemented.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#741"
    ],
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Mixed",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 82,
    "kind": "file",
    "name": "src/board/commands/get_fk.js",
    "content": "/**\n* Get forward kinematics.\n*\n* ### on success\n* ```\n* return {\n*   \"move\": false,\n*   \"x\"   : 10,\n*   \"y\"   : 10,\n*   \"z\"   : 10\n* }\n* ```\n* ### on error\n* ```\n* return Error: 'Usage: get ik [-m] x[,y,z].'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#771\n*/\nexport function get_fk(raw, args) {\n  let move = args.shift() === '-m'\n\n  // error\n  if (raw.startsWith('error:')) {\n    return new Error('Usage: get fk [-m] x[,y,z].')\n  }\n\n  let matches = raw.match(/cartesian= X ([0-9\\.]+), Y ([0-9\\.]+), Z ([0-9\\.]+)/)\n\n  if (! matches) {\n    return new Error('Unknown response string.')\n  }\n\n  return {\n    move,\n    x: parseFloat(matches[1]),\n    y: parseFloat(matches[2]),\n    z: parseFloat(matches[3])\n  }\n}\n",
    "static": true,
    "longname": "src/board/commands/get_fk.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "get_fk",
    "memberof": "src/board/commands/get_fk.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/get_fk.js~get_fk",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/get_fk.js",
    "importStyle": "{get_fk}",
    "description": "Get forward kinematics.\n\n### on success\n```\nreturn {\n  \"move\": false,\n  \"x\"   : 10,\n  \"y\"   : 10,\n  \"z\"   : 10\n}\n```\n### on error\n```\nreturn Error: 'Usage: get ik [-m] x[,y,z].'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#771"
    ],
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 84,
    "kind": "file",
    "name": "src/board/commands/get_ik.js",
    "content": "/**\n* Get inverse kinematics.\n*\n* ### on success\n* ```\n* return {\n*   \"move\": false,\n*   \"x\"   : 10,\n*   \"y\"   : 10,\n*   \"z\"   : 10\n* }\n* ```\n* ### on error\n* ```\n* return Error: 'Usage: get ik [-m] x[,y,z].'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#771\n*/\nexport function get_ik(raw, args) {\n  let move = args.shift() === '-m'\n\n  // error\n  if (raw.startsWith('error:')) {\n    return new Error('Usage: get ik [-m] x[,y,z].')\n  }\n\n  let matches = raw.match(/actuator= X ([0-9\\.]+), Y ([0-9\\.]+), Z ([0-9\\.]+)/)\n\n  if (! matches) {\n    return new Error('Unknown response string.')\n  }\n\n  return {\n    move,\n    x: parseFloat(matches[1]),\n    y: parseFloat(matches[2]),\n    z: parseFloat(matches[3])\n  }\n}\n",
    "static": true,
    "longname": "src/board/commands/get_ik.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 85,
    "kind": "function",
    "name": "get_ik",
    "memberof": "src/board/commands/get_ik.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/get_ik.js~get_ik",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/get_ik.js",
    "importStyle": "{get_ik}",
    "description": "Get inverse kinematics.\n\n### on success\n```\nreturn {\n  \"move\": false,\n  \"x\"   : 10,\n  \"y\"   : 10,\n  \"z\"   : 10\n}\n```\n### on error\n```\nreturn Error: 'Usage: get ik [-m] x[,y,z].'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#771"
    ],
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 86,
    "kind": "file",
    "name": "src/board/commands/get_pos.js",
    "content": "/**\n* Get position.\n*\n* ### on success\n* ```\n* return {\n*   \"WCS\": {\n*     \"command\"    : \"M114\",\n*     \"description\": \"Position of all axes\",\n*     \"x\"          : 0,\n*     \"y\"          : 0,\n*     \"z\"          : 0\n*   },\n*   \"WPOS\": {\n*     \"command\"    : \"M114.1\",\n*     \"description\": \"Real time position of all axes\"\n*     // , x, y, z\n*   },\n*   \"MPOS\": {\n*     \"command\"    : \"M114.2\",\n*     \"description\": \"Real time machine position of all axes\"\n*     // , x, y, z\n*   },\n*   \"APOS\": {\n*     \"command\"    : \"M114.3\",\n*     \"description\": \"Real time actuator position of all actuators\"\n*     // , x, y, z\n*   },\n*   \"LMS\": {\n*     \"command\"    : \"M114.4\",\n*     \"description\": \"Last milestone\"\n*     // , x, y, z\n*   },\n*   \"LMP\": {\n*     \"command\"    : \"M114.5\",\n*     \"description\": \"Last machine position\"\n*     // , x, y, z\n*   }\n* }\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#818\n*/\nexport function get_pos(raw, args) {\n  // last C: X:0.0000 Y:0.0000 Z:0.0000\n  // realtime WPOS: X:0.0000 Y:0.0000 Z:0.0000\n  // MPOS: X:0.0000 Y:0.0000 Z:0.0000\n  // APOS: X:0.0000 Y:0.0000 Z:0.0000\n  // LMS: X:0.0000 Y:0.0000 Z:0.0000\n  // LMP: X:0.0000 Y:0.0000 Z:0.0000\n  // split on new lines\n  let lines = raw.split('\\n')\n  let key, positions = {}\n\n  lines.forEach(line => {\n    let r = parsePositionString(line)\n    positions[r.key] = r.position\n  })\n\n  // split response text on new lines\n  return positions\n}\n\n// Parse position string.\n// WCS : M114   - Last WCS.\n// WPOS: M114.1 - Realtime WCS.\n// MPOS: M114.2 - Realtime machine coordinate system.\n// APOS: M114.3 - Realtime actuator position.\n// LMS : M114.4 - Last milestone.\n// LMP : M114.5 - Last machine position.\nfunction parsePositionString(line) {\n  let parts  = line.split(':')\n  let key    = parts.shift().replace(' ', '_').toUpperCase()\n  let coords = parts.join(':').trim().split(' ')\n\n  let position = {\n    x  : parseFloat(coords[0].substr(2)),\n    y  : parseFloat(coords[1].substr(2)),\n    z  : parseFloat(coords[2].substr(2))\n  }\n\n  if (key === 'LAST_C') {\n    key = 'WCS'\n  }\n  else if (key === 'REALTIME_WPOS') {\n    key = 'WPOS'\n  }\n\n  switch (key) {\n    case 'WCS':\n      position.command     = 'M114'\n      position.description = 'Position of all axes'\n      break\n    case 'WPOS':\n      position.command     = 'M114.1'\n      position.description = 'Real time position of all axes'\n      break\n    case 'MPOS':\n      position.command     = 'M114.2'\n      position.description = 'Real time machine position of all axes'\n      break\n    case 'APOS':\n      position.command     = 'M114.3'\n      position.description = 'Real time actuator position of all actuators'\n      break\n    case 'LMS':\n      position.command     = 'M114.4'\n      position.description = 'Last milestone'\n      break\n    case 'LMP':\n      position.command     = 'M114.5'\n      position.description = 'Last machine position'\n      break\n    default:\n      position.command     = 'M114.?'\n      position.description = 'Unknown type'\n  }\n\n  return { key, position }\n}\n",
    "static": true,
    "longname": "src/board/commands/get_pos.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "get_pos",
    "memberof": "src/board/commands/get_pos.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/get_pos.js~get_pos",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/get_pos.js",
    "importStyle": "{get_pos}",
    "description": "Get position.\n\n### on success\n```\nreturn {\n  \"WCS\": {\n    \"command\"    : \"M114\",\n    \"description\": \"Position of all axes\",\n    \"x\"          : 0,\n    \"y\"          : 0,\n    \"z\"          : 0\n  },\n  \"WPOS\": {\n    \"command\"    : \"M114.1\",\n    \"description\": \"Real time position of all axes\"\n    // , x, y, z\n  },\n  \"MPOS\": {\n    \"command\"    : \"M114.2\",\n    \"description\": \"Real time machine position of all axes\"\n    // , x, y, z\n  },\n  \"APOS\": {\n    \"command\"    : \"M114.3\",\n    \"description\": \"Real time actuator position of all actuators\"\n    // , x, y, z\n  },\n  \"LMS\": {\n    \"command\"    : \"M114.4\",\n    \"description\": \"Last milestone\"\n    // , x, y, z\n  },\n  \"LMP\": {\n    \"command\"    : \"M114.5\",\n    \"description\": \"Last machine position\"\n    // , x, y, z\n  }\n}\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#818"
    ],
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "parsePositionString",
    "memberof": "src/board/commands/get_pos.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/get_pos.js~parsePositionString",
    "access": null,
    "export": false,
    "importPath": "smoothie-happy/src/board/commands/get_pos.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "line",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"key\": *, \"position\": *}"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/board/commands/get_state.js",
    "content": "/**\n* Get state.\n*\n* ### on success\n* ```\n* return\n* {\n*   \"modal\"          : \"G0\",\n*   \"wcs\"            : \"G54\",\n*   \"plane_selection\": \"G17\",\n*   \"unit\"           : \"G21\",\n*   \"distance_mode\"  : \"G90\",\n*   \"path_control\"   : \"G94\",\n*   \"program_pause\"  : \"M0\",\n*   \"stop_tool\"      : \"M5\",\n*   \"stop_coolant\"   : \"M9\",\n*   \"tool\"           : \"T0\",\n*   \"feed_rate\"      : \"F4000.0000\",\n*   \"s_value\"        : \"S0.8000\",\n*   \"state\"          : [ \"G0\", \"G54\", \"G17\", \"G21\", \"G90\", \"G94\", \"M0\", \"M5\", \"M9\", \"T0\", \"F4000.0000\", \"S0.8000\" ]\n* }\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#832\n*/\nexport function get_state(raw, args) {\n  let state = raw.slice(1, -1).split(' ')\n\n  return {\n    modal          : state[0],\n    wcs            : state[1],\n    plane_selection: state[2],\n    unit           : state[3],\n    distance_mode  : state[4],\n    path_control   : state[5],\n    program_pause  : state[6],\n    stop_tool      : state[7],\n    stop_coolant   : state[8],\n    tool           : state[9],\n    feed_rate      : state[10],\n    s_value        : state[11],\n    state          : state\n  }\n}\n",
    "static": true,
    "longname": "src/board/commands/get_state.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "get_state",
    "memberof": "src/board/commands/get_state.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/get_state.js~get_state",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/get_state.js",
    "importStyle": "{get_state}",
    "description": "Get state.\n\n### on success\n```\nreturn\n{\n  \"modal\"          : \"G0\",\n  \"wcs\"            : \"G54\",\n  \"plane_selection\": \"G17\",\n  \"unit\"           : \"G21\",\n  \"distance_mode\"  : \"G90\",\n  \"path_control\"   : \"G94\",\n  \"program_pause\"  : \"M0\",\n  \"stop_tool\"      : \"M5\",\n  \"stop_coolant\"   : \"M9\",\n  \"tool\"           : \"T0\",\n  \"feed_rate\"      : \"F4000.0000\",\n  \"s_value\"        : \"S0.8000\",\n  \"state\"          : [ \"G0\", \"G54\", \"G17\", \"G21\", \"G90\", \"G94\", \"M0\", \"M5\", \"M9\", \"T0\", \"F4000.0000\", \"S0.8000\" ]\n}\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#832"
    ],
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "src/board/commands/get_status.js",
    "content": "/**\n* Get status.\n*\n* ### on success\n* ```\n* return\n* {\n*   \"status\"   : \"idle\", // [idle, alarm, home, hold, run]\n*   \"machine\"  : { \"x\": 0, \"y\": 0, \"z\": 0 },\n*   \"workspace\": { \"x\": 0, \"y\": 0, \"z\": 0 }\n* }\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#847\n* @see https://github.com/Smoothieware/Smoothieware/blob/f7d999cff4a33d83b09ce136c122b3b7b2f1c69a/src/libs/Kernel.cpp#L163\n*/\nexport function get_status(raw, args) {\n  let parts = raw.slice(1, -1).toLowerCase().replace(/(w|m)pos:/g, '').split(',')\n\n  return {\n    status: parts[0],\n    machine: {\n      x: parseFloat(parts[1]),\n      y: parseFloat(parts[2]),\n      z: parseFloat(parts[3])\n    },\n    workspace: {\n      x: parseFloat(parts[4]),\n      y: parseFloat(parts[5]),\n      z: parseFloat(parts[6])\n    }\n  }\n}\n",
    "static": true,
    "longname": "src/board/commands/get_status.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "get_status",
    "memberof": "src/board/commands/get_status.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/get_status.js~get_status",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/get_status.js",
    "importStyle": "{get_status}",
    "description": "Get status.\n\n### on success\n```\nreturn\n{\n  \"status\"   : \"idle\", // [idle, alarm, home, hold, run]\n  \"machine\"  : { \"x\": 0, \"y\": 0, \"z\": 0 },\n  \"workspace\": { \"x\": 0, \"y\": 0, \"z\": 0 }\n}\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#847",
      "https://github.com/Smoothieware/Smoothieware/blob/f7d999cff4a33d83b09ce136c122b3b7b2f1c69a/src/libs/Kernel.cpp#L163"
    ],
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/board/commands/get_temp.js",
    "content": "/**\n* Get temperature.\n*\n* ### on success\n* ```\n* // get temp\n* return [\n*   {\n*     \"designator\": \"T\",\n*     \"id\": 57988,\n*     \"current\": null, // null means the sensor is not properly connected, or it is damaged in some way.\n*     \"target\": 0,\n*     \"pwm\": 0\n*   },\n*   {\n*     \"designator\": \"B\",\n*     \"id\": 22060,\n*     \"current\": null,\n*     \"target\": 0,\n*     \"pwm\": 0\n*   }\n* ]\n* ```\n* ```\n* // get temp bed\n* return {\n*   \"designator\": \"bed\",\n*   \"current\": null,\n*   \"target\": 0,\n*   \"pwm\": 0\n* }\n* ```\n* ### on error\n* ```\n* return Error: 'No heaters found.'\n* return Error: 'Unknown response string.'\n* return Error: '\"xxx\" is not a known temperature device.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#745\n*/\nexport function get_temp(raw, args) {\n  if (raw.startsWith('no heaters found')) {\n    return new Error('No heaters found.')\n  }\n\n  // device [bed|hotend]\n  let device = (args[0] || 'all').toLowerCase()\n\n  if (raw.endsWith('is not a known temperature device')) {\n    return new Error('\"' + device + '\" is not a known temperature device.')\n  }\n\n  let result\n\n  if (device === 'all') {\n    // [T (57988) temp: inf/0.000000 @0]\n    return raw.split('\\n').map(parseTempString)\n  }\n\n  // \"bed temp: inf/0.000000 @0\"\n  let matches = raw.match(/([a-z]+) temp: (inf|[0-9\\.]+)\\/(inf|[0-9\\.]+) @([0-9]+)/)\n\n  if (! matches) {\n    return new Error('Unknown response string.')\n  }\n\n  return {\n    device : matches[1],\n    current: parseFloat(matches[2]),\n    target : parseFloat(matches[3]),\n    pwm    : parseInt(matches[4]),\n  }\n}\n\nfunction parseTempString(temp) {\n  // T (57988) temp: inf/0.000000 @0\n  let matches = temp.match(/(T|B) \\(([0-9]+)\\) temp: (inf|[0-9\\.]+)\\/(inf|[0-9\\.]+) @([0-9]+)/)\n\n  if (! matches) {\n    return new Error('Unknown response string.')\n  }\n\n  return {\n    designator: matches[1],\n    id        : parseInt(matches[2]),\n    current   : parseFloat(matches[3]),\n    target    : parseFloat(matches[4]),\n    pwm       : parseInt(matches[5]),\n  }\n}\n",
    "static": true,
    "longname": "src/board/commands/get_temp.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "get_temp",
    "memberof": "src/board/commands/get_temp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/get_temp.js~get_temp",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/get_temp.js",
    "importStyle": "{get_temp}",
    "description": "Get temperature.\n\n### on success\n```\n// get temp\nreturn [\n  {\n    \"designator\": \"T\",\n    \"id\": 57988,\n    \"current\": null, // null means the sensor is not properly connected, or it is damaged in some way.\n    \"target\": 0,\n    \"pwm\": 0\n  },\n  {\n    \"designator\": \"B\",\n    \"id\": 22060,\n    \"current\": null,\n    \"target\": 0,\n    \"pwm\": 0\n  }\n]\n```\n```\n// get temp bed\nreturn {\n  \"designator\": \"bed\",\n  \"current\": null,\n  \"target\": 0,\n  \"pwm\": 0\n}\n```\n### on error\n```\nreturn Error: 'No heaters found.'\nreturn Error: 'Unknown response string.'\nreturn Error: '\"xxx\" is not a known temperature device.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#745"
    ],
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "parseTempString",
    "memberof": "src/board/commands/get_temp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/get_temp.js~parseTempString",
    "access": null,
    "export": false,
    "importPath": "smoothie-happy/src/board/commands/get_temp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "temp",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"designator\": *, \"id\": *, \"current\": *, \"target\": *, \"pwm\": *}"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "file",
    "name": "src/board/commands/get_wcs.js",
    "content": "/**\n* Get wcs state.\n*\n* ### on success\n* ```\n* return {\n*   \"current\": \"G54\",\n*   \"tool\"   : { \"x\": 0, \"y\": 0, \"z\": 0 },\n*   \"prob\"   : { \"x\": 0, \"y\": 0, \"z\": 0 },\n*   \"G54\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n*   \"G55\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n*   \"G56\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n*   \"G57\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n*   \"G58\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n*   \"G59\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n*   \"G59.1\"  : { \"x\": 0, \"y\": 0, \"z\": 0 },\n*   \"G59.2\"  : { \"x\": 0, \"y\": 0, \"z\": 0 },\n*   \"G59.3\"  : { \"x\": 0, \"y\": 0, \"z\": 0 },\n*   \"G28\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n*   \"G30\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n*   \"G92\"    : { \"x\": 0, \"y\": 0, \"z\": 0 }\n*}\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#828\n*/\nexport function get_wcs(raw, args) {\n  // [current WCS: G54]\n  // [G54:0.0000,0.0000,0.0000]\n  // [G55:0.0000,0.0000,0.0000]\n  // [G56:0.0000,0.0000,0.0000]\n  // [G57:0.0000,0.0000,0.0000]\n  // [G58:0.0000,0.0000,0.0000]\n  // [G59:0.0000,0.0000,0.0000]\n  // [G59.1:0.0000,0.0000,0.0000]\n  // [G59.2:0.0000,0.0000,0.0000]\n  // [G59.3:0.0000,0.0000,0.0000]\n  // [G28:0.0000,0.0000,0.0000]\n  // [G30:0.0000,0.0000,0.0000]\n  // [G92:0.0000,0.0000,0.0000]\n  // [Tool Offset:0.0000,0.0000,0.0000]\n  // [PRB:0.0000,0.0000,0.0000:0]\n  let lines = raw.split('\\n')\n\n  // unwrap line ([...])\n  lines = lines.map(line => line.slice(1, -1))\n\n  let wcs = {\n    current: lines.shift().split(': ').pop()\n  }\n\n  lines.forEach(line => {\n    let parts  = line.split(':')\n    let code   = parts.shift().toUpperCase()\n    let coords = parts.shift().split(',')\n\n    if (code === 'TOOL OFFSET') {\n      code = 'tool'\n    }\n    else if (code === 'PRB') {\n      code = 'prob'\n    }\n\n    wcs[code] = {\n      x: parseFloat(coords[0]),\n      y: parseFloat(coords[1]),\n      z: parseFloat(coords[2])\n    }\n  })\n\n  return wcs\n}\n",
    "static": true,
    "longname": "src/board/commands/get_wcs.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "get_wcs",
    "memberof": "src/board/commands/get_wcs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/get_wcs.js~get_wcs",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/get_wcs.js",
    "importStyle": "{get_wcs}",
    "description": "Get wcs state.\n\n### on success\n```\nreturn {\n  \"current\": \"G54\",\n  \"tool\"   : { \"x\": 0, \"y\": 0, \"z\": 0 },\n  \"prob\"   : { \"x\": 0, \"y\": 0, \"z\": 0 },\n  \"G54\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n  \"G55\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n  \"G56\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n  \"G57\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n  \"G58\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n  \"G59\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n  \"G59.1\"  : { \"x\": 0, \"y\": 0, \"z\": 0 },\n  \"G59.2\"  : { \"x\": 0, \"y\": 0, \"z\": 0 },\n  \"G59.3\"  : { \"x\": 0, \"y\": 0, \"z\": 0 },\n  \"G28\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n  \"G30\"    : { \"x\": 0, \"y\": 0, \"z\": 0 },\n  \"G92\"    : { \"x\": 0, \"y\": 0, \"z\": 0 }\n}\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#828"
    ],
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 98,
    "kind": "file",
    "name": "src/board/commands/help.js",
    "content": "/**\n* Get command help list.\n*\n* ### on success\n* ```\n* return \"List of command help. One by line.\"\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#1124\n*/\nexport function cmd_help(raw, args) {\n  return raw.trim()\n}\n",
    "static": true,
    "longname": "src/board/commands/help.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "cmd_help",
    "memberof": "src/board/commands/help.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/help.js~cmd_help",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/help.js",
    "importStyle": "{cmd_help}",
    "description": "Get command help list.\n\n### on success\n```\nreturn \"List of command help. One by line.\"\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#1124"
    ],
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/board/commands/index.js",
    "content": "import { normalizePath } from '../util'\n\n// -----------------------------------------------------------------------------\n// List of commands (12/2016)\n// http://smoothieware.org/console-commands\n// https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp\n// -----------------------------------------------------------------------------\n// # DONE\n// - TODO\n// -----------------------------------------------------------------------------\n// # abort\n// # break\n// # calc_thermistor\n// # cat\n// # cd\n// # config-load\n// # config-get\n// # config-set\n// # dfu\n// # fire\n// # get\n// # help\n// # load\n// # ls\n// # md5sum\n// # mem\n// # mv\n// # mkdir\n// # net\n// # ok\n// # play\n// # progress\n// # pwd\n// # remount\n// # reset\n// # resume\n// # rm\n// # save\n// # set_temp\n// # suspend\n// # switch\n// # test\n// # thermistors\n// - upload (<- not handled by BoardCommand)\n// # version\n//\n// # M999\n// -----------------------------------------------------------------------------\n\nexport { cmd_abort } from './abort'\nexport { cmd_break } from './break'\nexport { cmd_calc_thermistor } from './calc_thermistor'\nexport { cmd_cat } from './cat'\nexport { cmd_cd } from './cd'\nexport { cmd_config_load } from './config_load'\nexport { cmd_config_get } from './config_get'\nexport { cmd_config_set } from './config_set'\nexport { cmd_dfu } from './dfu'\nexport { cmd_fire } from './fire'\nexport { cmd_get } from './get'\nexport { cmd_help } from './help'\nexport { cmd_load } from './load'\nexport { cmd_ls } from './ls'\nexport { cmd_md5sum } from './md5sum'\nexport { cmd_mem } from './mem'\nexport { cmd_mv } from './mv'\nexport { cmd_mkdir } from './mkdir'\nexport { cmd_net } from './net'\nexport { cmd_ok } from './ok'\nexport { cmd_play } from './play'\nexport { cmd_progress } from './progress'\nexport { cmd_pwd } from './pwd'\nexport { cmd_remount } from './remount'\nexport { cmd_reset } from './reset'\nexport { cmd_resume } from './resume'\nexport { cmd_rm } from './rm'\nexport { cmd_save } from './save'\nexport { cmd_set_temp } from './set_temp'\nexport { cmd_suspend } from './suspend'\nexport { cmd_switch } from './switch'\nexport { cmd_test } from './test'\nexport { cmd_thermistors } from './thermistors'\nexport { cmd_version } from './version'\n\nexport { cmd_M999 } from './M999'\n",
    "static": true,
    "longname": "src/board/commands/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "src/board/commands/load.js",
    "content": "import { normalizePath } from '../util'\n\n/**\n* Parse `load` command response.\n*\n* ### on success\n* ```\n* return {\n*   \"file\"  : \"/sd/config-override\",\n*   \"config\": [\n*     [\n*      \"Steps per unit\",\n*      \"M92 X80.00000 Y80.00000 Z1600.00000\"\n*     ],\n*     [\n*      \"Acceleration mm/sec^2\",\n*      \"M204 S3000.00000\"\n*     ],\n*     [\n*      \"X- Junction Deviation, Z- Z junction deviation, S - Minimum Planner speed mm/sec\",\n*      \"M205 X0.05000 Z-1.00000 S0.00000\"\n*     ],\n*     [\n*      \"Max cartesian feedrates in mm/sec\",\n*      \"M203 X500.00000 Y500.00000 Z5.00000\"\n*     ],\n*     [\n*      \"Max actuator feedrates in mm/sec\",\n*      \"M203.1 X500.00000 Y500.00000 Z5.00000\"\n*     ],\n*     [\n*      \"WCS setting\",\n*      \"G54\"\n*     ],\n*     [\n*      \"Digipot Motor currents\",\n*      \"M907 X1.50000 Y1.50000 Z1.50000 A1.50000\"\n*     ],\n*     [\n*      \"Home offset (mm)\",\n*      \"M206 X0.00 Y0.00 Z0.00\"\n*     ],\n*     [\n*      \"E Steps per mm\",\n*      \"M92 E140.0000 P57988\"\n*     ],\n*     [\n*      \"E Filament diameter\",\n*      \"M200 D0.0000 P57988\"\n*     ],\n*     [\n*      \"E retract length, feedrate\",\n*      \"M207 S3.0000 F2700.0000 Z0.0000 Q6000.0000 P57988\"\n*     ],\n*     [\n*      \"E retract recover length, feedrate\",\n*      \"M208 S0.0000 F480.0000 P57988\"\n*     ],\n*     [\n*      \"E acceleration mm/sec²\",\n*      \"M204 E500.0000 P57988\"\n*     ],\n*     [\n*      \"E max feed rate mm/sec\",\n*      \"M203 E50.0000 P57988\"\n*     ],\n*     [\n*      \"PID settings\",\n*      \"M301 S0 P10.0000 I0.3000 D200.0000 X255.0000 Y255\"\n*     ],\n*     [\n*      \"Max temperature setting\",\n*      \"M143 S0 P300.0000\"\n*     ],\n*     [\n*      \"PID settings\",\n*      \"M301 S1 P10.0000 I0.3000 D200.0000 X255.0000 Y255\"\n*     ],\n*     [\n*      \"Max temperature setting\",\n*      \"M143 S1 P300.0000\"\n*     ]\n*   ]\n* }\n* ```\n* ### on error\n* ```\n* return Error: 'File not found \"xxx\".'\n* return Error: 'Malformed file \"xxx\".'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L512\n*/\nexport function cmd_load(raw, args) {\n  raw = raw.trim()\n\n  let source = normalizePath(args[0] || '')\n\n  if (raw.startsWith('File not found')) {\n    return new Error('File not found \"' + source + '\".')\n  }\n\n  let matches = raw.match(/^Loading config override file: (.*).../)\n\n  if (! matches) {\n    return new Error('Unknown response string.')\n  }\n\n  let file  = matches[1]\n  let lines = raw.split('\\n').slice(1, -1).map(l => l.trim())\n  let test  = lines.shift()\n\n  if (! test || test !== '; DO NOT EDIT THIS FILE') {\n    return new Error('Malformed file \"' + source + '\".')\n  }\n\n  let config = []\n\n  for (let i = 0; i < lines.length; i += 2) {\n    config.push([ lines[i].slice(1, -1), lines[i + 1] ])\n  }\n\n  return { file, config }\n}\n",
    "static": true,
    "longname": "src/board/commands/load.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "cmd_load",
    "memberof": "src/board/commands/load.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/load.js~cmd_load",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/load.js",
    "importStyle": "{cmd_load}",
    "description": "Parse `load` command response.\n\n### on success\n```\nreturn {\n  \"file\"  : \"/sd/config-override\",\n  \"config\": [\n    [\n     \"Steps per unit\",\n     \"M92 X80.00000 Y80.00000 Z1600.00000\"\n    ],\n    [\n     \"Acceleration mm/sec^2\",\n     \"M204 S3000.00000\"\n    ],\n    [\n     \"X- Junction Deviation, Z- Z junction deviation, S - Minimum Planner speed mm/sec\",\n     \"M205 X0.05000 Z-1.00000 S0.00000\"\n    ],\n    [\n     \"Max cartesian feedrates in mm/sec\",\n     \"M203 X500.00000 Y500.00000 Z5.00000\"\n    ],\n    [\n     \"Max actuator feedrates in mm/sec\",\n     \"M203.1 X500.00000 Y500.00000 Z5.00000\"\n    ],\n    [\n     \"WCS setting\",\n     \"G54\"\n    ],\n    [\n     \"Digipot Motor currents\",\n     \"M907 X1.50000 Y1.50000 Z1.50000 A1.50000\"\n    ],\n    [\n     \"Home offset (mm)\",\n     \"M206 X0.00 Y0.00 Z0.00\"\n    ],\n    [\n     \"E Steps per mm\",\n     \"M92 E140.0000 P57988\"\n    ],\n    [\n     \"E Filament diameter\",\n     \"M200 D0.0000 P57988\"\n    ],\n    [\n     \"E retract length, feedrate\",\n     \"M207 S3.0000 F2700.0000 Z0.0000 Q6000.0000 P57988\"\n    ],\n    [\n     \"E retract recover length, feedrate\",\n     \"M208 S0.0000 F480.0000 P57988\"\n    ],\n    [\n     \"E acceleration mm/sec²\",\n     \"M204 E500.0000 P57988\"\n    ],\n    [\n     \"E max feed rate mm/sec\",\n     \"M203 E50.0000 P57988\"\n    ],\n    [\n     \"PID settings\",\n     \"M301 S0 P10.0000 I0.3000 D200.0000 X255.0000 Y255\"\n    ],\n    [\n     \"Max temperature setting\",\n     \"M143 S0 P300.0000\"\n    ],\n    [\n     \"PID settings\",\n     \"M301 S1 P10.0000 I0.3000 D200.0000 X255.0000 Y255\"\n    ],\n    [\n     \"Max temperature setting\",\n     \"M143 S1 P300.0000\"\n    ]\n  ]\n}\n```\n### on error\n```\nreturn Error: 'File not found \"xxx\".'\nreturn Error: 'Malformed file \"xxx\".'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L512"
    ],
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 103,
    "kind": "file",
    "name": "src/board/commands/ls.js",
    "content": "import { normalizePath } from '../util'\n\n/**\n* Parse `ls` command response.\n*\n* ### on success\n* - If the `-s` parameter is not provided, the size is set to 0.\n* - The size is also set to 0 on directories.\n* ```\n* return [\n*   {\"extension\":\"\",\"name\":\"project1\",\"path\":\"/sd/project1\",\"parent\":\"/sd\",\"type\":\"folder\",\"size\":0},\n*   {\"extension\":\".cur\",\"name\":\"firmware.cur\",\"path\":\"/sd/firmware.cur\",\"parent\":\"/sd\",\"type\":\"file\",\"size\":368144},\n*   {\"extension\":\"\",\"name\":\"config\",\"path\":\"/sd/config\",\"parent\":\"/sd\",\"type\":\"file\",\"size\":29417},\n*   {\"extension\":\".gcode\",\"name\":\"file1.gcode\",\"path\":\"/sd/file1.gcode\",\"parent\":\"/sd\",\"type\":\"file\",\"size\":1914257},\n*   {\"extension\":\".gcode\",\"name\":\"file2.gcode\",\"path\":\"/sd/file2.gcode\",\"parent\":\"/sd\",\"type\":\"file\",\"size\":0},\n*   {\"extension\":\".gcode\",\"name\":\"file3.gcode\",\"path\":\"/sd/file3.gcode\",\"parent\":\"/sd\",\"type\":\"file\",\"size\":1062811}\n* ]\n* ```\n* ### on error\n* ```\n* return Error: 'Could not open \"xxx\" directory.'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Array|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L284\n*/\nexport function cmd_ls(raw, args) {\n  // size flag\n  let size = args[0] === '-s'\n\n  size && args.shift()\n\n  // extract and normalize path\n  let path = normalizePath(args[0] || '')\n\n  // raw response\n  raw = raw.trim()\n\n  // file not found\n  if (raw.startsWith('Could not open directory')) {\n    return new Error('Could not open \"' + path + '\" directory.')\n  }\n\n  // excluded files\n  let excludes = [\"system volume information/\"]\n\n  // split lines\n  let lines = raw.split('\\n')\n  let info  = null\n\n  // empty files list\n  let files = []\n  let file  = null\n  let isDir = false\n\n  let extension\n  let rootPath = path !== '/' ? path : ''\n\n  // for each lines (file)\n  lines.forEach(line => {\n    // remove trailing spaces\n    line = line.trim()\n\n    if (! excludes.includes(line)) {\n      // extract file/directory info (name/size)\n      info = line.trim().match(/^([a-z0-9_\\-\\.]+) ?(\\/| [0-9]+)?$/, 'gi')\n\n      if (! info) {\n        return new Error('Unknown response string.')\n      }\n\n      // is directory ?\n      isDir = info[2] === '/'\n\n      extension = ''\n\n      if (info[1].includes('.')) {\n        extension = '.' + info[1].split('.').pop()\n      }\n\n      // set file info\n      files.push({\n        name: info[1],\n        extension: extension,\n        parent: rootPath.length ? rootPath : '/',\n        path: rootPath + '/' + info[1],\n        type: isDir ? 'folder' : 'file',\n        size: isDir ? 0 : parseInt(info[2] || 0)\n      })\n    }\n  })\n\n  return files\n}\n",
    "static": true,
    "longname": "src/board/commands/ls.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "cmd_ls",
    "memberof": "src/board/commands/ls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/ls.js~cmd_ls",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/ls.js",
    "importStyle": "{cmd_ls}",
    "description": "Parse `ls` command response.\n\n### on success\n- If the `-s` parameter is not provided, the size is set to 0.\n- The size is also set to 0 on directories.\n```\nreturn [\n  {\"extension\":\"\",\"name\":\"project1\",\"path\":\"/sd/project1\",\"parent\":\"/sd\",\"type\":\"folder\",\"size\":0},\n  {\"extension\":\".cur\",\"name\":\"firmware.cur\",\"path\":\"/sd/firmware.cur\",\"parent\":\"/sd\",\"type\":\"file\",\"size\":368144},\n  {\"extension\":\"\",\"name\":\"config\",\"path\":\"/sd/config\",\"parent\":\"/sd\",\"type\":\"file\",\"size\":29417},\n  {\"extension\":\".gcode\",\"name\":\"file1.gcode\",\"path\":\"/sd/file1.gcode\",\"parent\":\"/sd\",\"type\":\"file\",\"size\":1914257},\n  {\"extension\":\".gcode\",\"name\":\"file2.gcode\",\"path\":\"/sd/file2.gcode\",\"parent\":\"/sd\",\"type\":\"file\",\"size\":0},\n  {\"extension\":\".gcode\",\"name\":\"file3.gcode\",\"path\":\"/sd/file3.gcode\",\"parent\":\"/sd\",\"type\":\"file\",\"size\":1062811}\n]\n```\n### on error\n```\nreturn Error: 'Could not open \"xxx\" directory.'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L284"
    ],
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "src/board/commands/M999.js",
    "content": "/**\n* Clear state.\n*\n* ### on success\n* ```\n* return true if state cleared or false if state not halted\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Boolean|Error}\n*/\nexport function cmd_M999(raw, args) {\n  return raw.trim() !== 'ok'\n}\n",
    "static": true,
    "longname": "src/board/commands/M999.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "cmd_M999",
    "memberof": "src/board/commands/M999.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/M999.js~cmd_M999",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/M999.js",
    "importStyle": "{cmd_M999}",
    "description": "Clear state.\n\n### on success\n```\nreturn true if state cleared or false if state not halted\n```",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 107,
    "kind": "file",
    "name": "src/board/commands/md5sum.js",
    "content": "import { normalizePath } from '../util'\n\n/**\n* Get md5 sum of the given file.\n*\n* ### on success\n* ```\n* return {\n*   \"md5\" : \"335a4ebbaa1bc6b81cc94fd6e7209ec2\",\n*   \"file\": \"/sd/config\"\n* }\n* ```\n* ### on error\n* ```\n* return Error: 'File \"xxx\" not found.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L358\n*/\nexport function cmd_md5sum(raw, args) {\n  raw = raw.trim()\n\n  let source = normalizePath(args[0] || '')\n\n  if (raw.startsWith('File not found')) {\n    return new Error('File \"' + source + '\" not found.')\n  }\n\n  var parts = raw.split(' ')\n\n  return {\n    md5 : parts[0].trim(),\n    file: parts[1].trim()\n  };\n}\n",
    "static": true,
    "longname": "src/board/commands/md5sum.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "cmd_md5sum",
    "memberof": "src/board/commands/md5sum.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/md5sum.js~cmd_md5sum",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/md5sum.js",
    "importStyle": "{cmd_md5sum}",
    "description": "Get md5 sum of the given file.\n\n### on success\n```\nreturn {\n  \"md5\" : \"335a4ebbaa1bc6b81cc94fd6e7209ec2\",\n  \"file\": \"/sd/config\"\n}\n```\n### on error\n```\nreturn Error: 'File \"xxx\" not found.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L358"
    ],
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/board/commands/mem.js",
    "content": "/**\n* Get informations about memory usage.\n*\n* ### on success\n* ```\n* return {\n*   \"BLOCK_SIZE\"    : 100\n*   \"UNUSED_HEAP\"   : 8344,\n*   \"USED_HEAP_SIZE\": 18008,\n*   \"FREE\"          : 2572,\n*   \"ALLOCATED\"     : 14348,\n*   \"TOTAL_FREE_RAM\": 10916,\n*   \"AHB0\": {\n*     \"free\"  : 13652,\n*     \"total\" : 15184, // verbose mode only\n*     \"used\"  : 1532,  // verbose mode only\n*     \"chunks\": [      // verbose mode only\n*        {\n*         \"address\": \"0x2007c4b0\",\n*         \"offset\": 0,\n*         \"bytes\": 268,\n*         \"free\": false\n*        }\n*     //, ...\n*     ]\n*   },\n*   \"AHB1\": {\n*     \"free\"  : 10440,\n*     \"total\" : 10440, // verbose mode only\n*     \"used\"  : 0      // verbose mode only\n*     \"chunks\": [...]  // verbose mode only\n*   },\n*   \"CHUNKS\": [ // verbose mode only\n*     {\n*       \"address\": \"0x10000CF8\",\n*       \"bytes\"  : 32,\n*       \"free\"   : false\n*     }\n*     //, ...\n*   ]\n* }\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#578\n*/\nexport function cmd_mem(raw, args) {\n  // trim raw response\n  raw = raw.trim()\n\n  // verbose mode\n  let verbose = args[0] === '-v'\n\n  // // Split on new line\n  let lines = raw.split(/[\\r\\n|\\r|\\n]+/gm)\n\n  let memory = {}\n\n  if (verbose) {\n    memory.CHUNKS = []\n  }\n\n  let setValue = line => {\n    let [key, value] = line.split(': ')\n\n    let bytes = parseInt(value.trim().replace(/ bytes$/, ''))\n\n    key = key.trim().replace(/ +/gm, '_').toUpperCase()\n\n    if (key === 'FREE_AHB0') {\n      key = 'AHB0'\n    }\n\n    if (key.startsWith('AHB')) {\n      memory[key] = { free: bytes }\n    }\n    else {\n      memory[key] = bytes\n    }\n  }\n\n  let target = null\n\n  lines.forEach(line => {\n    line = line.trim()\n\n    if (line.startsWith('Allocated') || line.startsWith('Free AHB0')) {\n      line = line.split(', ')\n      setValue(line[1])\n      line = line[0]\n    }\n\n    if (verbose && line.startsWith('Chunk:')) {\n      // [\"Chunk: 7\", \"Address: 0x10001028\", \"Size: 20\", \"\"]\n      let chunk = line.split('  ')\n\n      memory.CHUNKS.push({\n        address: chunk[1].split(': ')[1],\n        bytes  : parseInt(chunk[2].split(': ')[1]),\n        free   : chunk[3] !== undefined\n      })\n    }\n    else if (verbose && line.startsWith('Start:')) {\n      target = memory['AHB' + (target === null ? '0' : '1')]\n      target.chunks = []\n    }\n    else if (verbose && line.startsWith('Chunk at')) {\n      // \"Chunk at 0x2007c8a8 (+1016): used, 516 bytes\"\n      // \"Chunk at 0x2007caac (+1532): free, 13652 bytes\"\n      let chunk = line.match(/^Chunk at ([0-9a-zA-Z]+) \\( *\\+([0-9]+)\\): (free|used), ([0-9]+) bytes$/)\n\n      target.chunks.push({\n        address: chunk[1],\n        offset : parseInt(chunk[2]),\n        bytes  : parseInt(chunk[4]),\n        free   : chunk[3] === 'free'\n      })\n    }\n    else if (verbose && line.startsWith('End:')) {\n      // total 10440b, free: 10440b\n      let end = line.match(/^End: total ([0-9]+)b, free: ([0-9]+)b$/)\n      target.total = parseInt(end[1])\n      target.used  = target.total - target.free\n    }\n    else {\n      setValue(line)\n    }\n  })\n\n  return memory\n}\n",
    "static": true,
    "longname": "src/board/commands/mem.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "cmd_mem",
    "memberof": "src/board/commands/mem.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/mem.js~cmd_mem",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/mem.js",
    "importStyle": "{cmd_mem}",
    "description": "Get informations about memory usage.\n\n### on success\n```\nreturn {\n  \"BLOCK_SIZE\"    : 100\n  \"UNUSED_HEAP\"   : 8344,\n  \"USED_HEAP_SIZE\": 18008,\n  \"FREE\"          : 2572,\n  \"ALLOCATED\"     : 14348,\n  \"TOTAL_FREE_RAM\": 10916,\n  \"AHB0\": {\n    \"free\"  : 13652,\n    \"total\" : 15184, // verbose mode only\n    \"used\"  : 1532,  // verbose mode only\n    \"chunks\": [      // verbose mode only\n       {\n        \"address\": \"0x2007c4b0\",\n        \"offset\": 0,\n        \"bytes\": 268,\n        \"free\": false\n       }\n    //, ...\n    ]\n  },\n  \"AHB1\": {\n    \"free\"  : 10440,\n    \"total\" : 10440, // verbose mode only\n    \"used\"  : 0      // verbose mode only\n    \"chunks\": [...]  // verbose mode only\n  },\n  \"CHUNKS\": [ // verbose mode only\n    {\n      \"address\": \"0x10000CF8\",\n      \"bytes\"  : 32,\n      \"free\"   : false\n    }\n    //, ...\n  ]\n}\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#578"
    ],
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 111,
    "kind": "file",
    "name": "src/board/commands/mkdir.js",
    "content": "import { normalizePath } from '../util'\n\n/**\n* Parse `mkdir` command response.\n*\n* ### on success\n* ```\n* return '/sd/new_directory'\n* ```\n* ### on error\n* ```\n* return Error: 'Could not create directory \"xxx\".'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L349\n*/\nexport function cmd_mkdir(raw, args) {\n  raw = raw.trim()\n\n  let source = normalizePath(args[0] || '')\n\n  if (raw.startsWith('could not create directory')) {\n    return new Error('Could not create directory \"' + source + '\".')\n  }\n\n  if (! raw.startsWith('created directory')) {\n    return new Error('Unknown response string.')\n  }\n\n  return source\n}\n",
    "static": true,
    "longname": "src/board/commands/mkdir.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "cmd_mkdir",
    "memberof": "src/board/commands/mkdir.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/mkdir.js~cmd_mkdir",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/mkdir.js",
    "importStyle": "{cmd_mkdir}",
    "description": "Parse `mkdir` command response.\n\n### on success\n```\nreturn '/sd/new_directory'\n```\n### on error\n```\nreturn Error: 'Could not create directory \"xxx\".'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L349"
    ],
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 113,
    "kind": "file",
    "name": "src/board/commands/mv.js",
    "content": "import { normalizePath } from '../util'\n\n/**\n* Move a file.\n*\n* ### on success\n* ```\n* return {\n*   source: '/sd/source.gcode',\n*   target: '/sd/target.gcode'\n* }\n* ```\n* ### on error\n* ```\n* return Error: 'Could not move \"xxx\" to \"yyy\".'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L339\n*/\nexport function cmd_mv(raw, args) {\n  // raw response\n  raw = raw.trim()\n\n  let source = normalizePath(args[0] || '')\n  let target = normalizePath(args[1] || '')\n\n  // file not found\n  if (raw.startsWith('Could not rename')) {\n    return new Error('Could not move \"' + source + '\" to \"' + target + '\".')\n  }\n\n  return { source, target }\n}\n",
    "static": true,
    "longname": "src/board/commands/mv.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "cmd_mv",
    "memberof": "src/board/commands/mv.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/mv.js~cmd_mv",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/mv.js",
    "importStyle": "{cmd_mv}",
    "description": "Move a file.\n\n### on success\n```\nreturn {\n  source: '/sd/source.gcode',\n  target: '/sd/target.gcode'\n}\n```\n### on error\n```\nreturn Error: 'Could not move \"xxx\" to \"yyy\".'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L339"
    ],
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "src/board/commands/net.js",
    "content": "/**\n* Get network config.\n*\n* ### on success\n* ```\n* return {\n*   \"ip\"     : \"192.168.1.102\",\n*   \"gateway\": \"192.168.1.1\",\n*   \"mask\"   : \"255.255.255.0\",\n*   \"mac\"    : \"00:00:00:00:00:00\"\n* }\n* ```\n* ### on error\n* ```\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#616\n*/\nexport function cmd_net(raw, args) {\n  let matches = raw.trim().match(/IP Addr:([^\\n]+)\\nIP GW:([^\\n]+)\\nIP mask:([^\\n]+)\\nMAC Address:([^\\n]+)/)\n\n  if (! matches) {\n    return new Error('Unknown response string.')\n  }\n\n  return {\n    ip     : matches[1].trim(),\n    gateway: matches[2].trim(),\n    mask   : matches[3].trim(),\n    mac    : matches[4].trim()\n  }\n}\n",
    "static": true,
    "longname": "src/board/commands/net.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "function",
    "name": "cmd_net",
    "memberof": "src/board/commands/net.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/net.js~cmd_net",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/net.js",
    "importStyle": "{cmd_net}",
    "description": "Get network config.\n\n### on success\n```\nreturn {\n  \"ip\"     : \"192.168.1.102\",\n  \"gateway\": \"192.168.1.1\",\n  \"mask\"   : \"255.255.255.0\",\n  \"mac\"    : \"00:00:00:00:00:00\"\n}\n```\n### on error\n```\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#616"
    ],
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 117,
    "kind": "file",
    "name": "src/board/commands/ok.js",
    "content": "/**\n* Parse `ok` command response.\n*\n* ### on success\n* ```\n* return \"ok\"\n* ```\n* ### on error\n* ```\n* return Error: 'ko'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L272\n*/\nexport function cmd_ok(raw, args) {\n  if (raw.trim() === 'ok') {\n    return 'ok'\n  }\n\n  return new Error('ko')\n}\n",
    "static": true,
    "longname": "src/board/commands/ok.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "cmd_ok",
    "memberof": "src/board/commands/ok.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/ok.js~cmd_ok",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/ok.js",
    "importStyle": "{cmd_ok}",
    "description": "Parse `ok` command response.\n\n### on success\n```\nreturn \"ok\"\n```\n### on error\n```\nreturn Error: 'ko'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L272"
    ],
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 119,
    "kind": "file",
    "name": "src/board/commands/play.js",
    "content": "import { normalizePath } from '../util'\r\n\r\n/**\r\n* Parse `play` command response.\r\n*\r\n* ### on success\r\n* ```\r\n* return {\r\n*   file: \"/sd/my_file.gcode\",\r\n*   size: 8600 // or null if not computable\r\n* }\r\n* ```\r\n* ### on error\r\n* ```\r\n* return Error: 'File \"xxx\" not found.'\r\n* return Error: 'Currently printing, abort print first.'\r\n* return Error: 'Unknown response string.'\r\n* ```\r\n* @param  {String}   raw  Raw command response string.\r\n* @param  {String[]} args Command arguments.\r\n* @return {Object|Error}\r\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L266\r\n* @see https://github.com/Smoothieware/Smoothieware/blob/1f73659f0b0cb6142e395c3d4d7dcbaadbac870a/src/modules/utils/player/Player.cpp#L267\r\n*/\r\nexport function cmd_play(raw, args) {\r\n  // raw response\r\n  raw = raw.trim()\r\n\r\n  // file file\r\n  let file = normalizePath(args[0] || '')\r\n\r\n  if (raw.startsWith('File not found')) {\r\n    return new Error('File \"' + file + '\" not found.')\r\n  }\r\n\r\n  if (raw.startsWith('Currently printing')) {\r\n    return new Error('Currently printing, abort print first.')\r\n  }\r\n\r\n  if (! raw.startsWith('Playing')) {\r\n    return new Error('Unknown response string.')\r\n  }\r\n\r\n  let lines = raw.split('\\n')\r\n  let size  = parseInt(lines[1].trim().split(' ').pop())\r\n\r\n  return { file, size }\r\n}\r\n",
    "static": true,
    "longname": "src/board/commands/play.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "cmd_play",
    "memberof": "src/board/commands/play.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/play.js~cmd_play",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/play.js",
    "importStyle": "{cmd_play}",
    "description": "Parse `play` command response.\n\n### on success\n```\nreturn {\n  file: \"/sd/my_file.gcode\",\n  size: 8600 // or null if not computable\n}\n```\n### on error\n```\nreturn Error: 'File \"xxx\" not found.'\nreturn Error: 'Currently printing, abort print first.'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L266",
      "https://github.com/Smoothieware/Smoothieware/blob/1f73659f0b0cb6142e395c3d4d7dcbaadbac870a/src/modules/utils/player/Player.cpp#L267"
    ],
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "src/board/commands/progress.js",
    "content": "/**\r\n* Parse `progress` command response.\r\n*\r\n* ### on success\r\n* ```\r\n* return {\r\n*   \"paused\"   : false,\r\n*   \"file\"     : \"/sd/file.gcode\",\r\n*   \"complete\" : 85, // percent\r\n*   \"elapsed\"  : \"00:13:43\",\r\n*   \"estimated\": \"00:02:14\" // undefined if elapsed <= 10 seconds\r\n* }\r\n*\r\n* // or if paused\r\n* return {\r\n*   \"paused\": true,\r\n*   \"played\": 150,\r\n*   \"total\" : 380\r\n* }\r\n* ```\r\n* ### on error\r\n* ```\r\n* return Error: 'Not currently playing.'\r\n* return Error: 'Unknown response string.'\r\n* ```\r\n* @param  {String}   raw  Raw command response string.\r\n* @param  {String[]} args Command arguments.\r\n* @return {Object|Error}\r\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L266\r\n* @see https://github.com/Smoothieware/Smoothieware/blob/1f73659f0b0cb6142e395c3d4d7dcbaadbac870a/src/modules/utils/player/Player.cpp#L315\r\n*/\r\nexport function cmd_progress(raw, args) {\r\n  // raw response\r\n  raw = raw.trim()\r\n\r\n  if (raw.startsWith('Not currently playing')) {\r\n    return new Error('Not currently playing.')\r\n  }\r\n\r\n  if (raw.startsWith('SD print is paused at')) {\r\n    let matches = raw.match(/SD print is paused at ([0-9]+)\\/([0-9]+)/)\r\n\r\n    if (! matches) {\r\n      return new Error('Unknown response string.')\r\n    }\r\n\r\n    return {\r\n      paused: true,\r\n      played: parseInt(matches[1]),\r\n      total : parseInt(matches[2])\r\n    }\r\n  }\r\n\r\n  // file: /sd/skate.gcode, 27 % complete, elapsed time: 7 s\r\n  // file: /sd/skate.gcode, 27 % complete, elapsed time: 13 s, est time: 33 s\r\n\r\n  // Since -> https://github.com/Smoothieware/Smoothieware/commit/7f7d84293841e659d436b8f833e90d6f8cbdf281\r\n  // file: /sd/tag.gcode, 6 % complete, elapsed time: 00:01:42, est time: 00:25:23\r\n  let matches = raw.match(/file: ([^,]+), ([0-9]+) % complete, elapsed time: ([0-9\\:]+)(?: s)?(?:, est time: ([0-9\\:]+)( s)?)?/)\r\n\r\n  if (! matches) {\r\n    return new Error('Unknown response string.')\r\n  }\r\n\r\n  // https://github.com/Smoothieware/Smoothieware/commit/7f7d84293841e659d436b8f833e90d6f8cbdf281\r\n  let elapsed   = matches[3]\r\n  let estimated = matches[4]\r\n\r\n  if (matches[5]) {\r\n    elapsed   = timeFormat(elapsed)\r\n    estimated = timeFormat(estimated)\r\n  }\r\n\r\n  return {\r\n    paused   : false,\r\n    file     : matches[1],\r\n    complete : parseInt(matches[2]),\r\n    elapsed,\r\n    estimated\r\n  }\r\n}\r\n\r\n// seconds -> 00:00:00\r\nfunction timeFormat(time) {\r\n  time = parseInt(time)\r\n  return [time / 3600, (time % 3600) / 60, time % 60].join(':')\r\n}\r\n",
    "static": true,
    "longname": "src/board/commands/progress.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "cmd_progress",
    "memberof": "src/board/commands/progress.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/progress.js~cmd_progress",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/progress.js",
    "importStyle": "{cmd_progress}",
    "description": "Parse `progress` command response.\n\n### on success\n```\nreturn {\n  \"paused\"   : false,\n  \"file\"     : \"/sd/file.gcode\",\n  \"complete\" : 85, // percent\n  \"elapsed\"  : \"00:13:43\",\n  \"estimated\": \"00:02:14\" // undefined if elapsed <= 10 seconds\n}\n\n// or if paused\nreturn {\n  \"paused\": true,\n  \"played\": 150,\n  \"total\" : 380\n}\n```\n### on error\n```\nreturn Error: 'Not currently playing.'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L266",
      "https://github.com/Smoothieware/Smoothieware/blob/1f73659f0b0cb6142e395c3d4d7dcbaadbac870a/src/modules/utils/player/Player.cpp#L315"
    ],
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "timeFormat",
    "memberof": "src/board/commands/progress.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/progress.js~timeFormat",
    "access": null,
    "export": false,
    "importPath": "smoothie-happy/src/board/commands/progress.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "time",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "file",
    "name": "src/board/commands/pwd.js",
    "content": "/**\n* Get current working directory.\n*\n* ### on success\n* ```\n* return \"/sd/folder\"\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L373\n*/\nexport function cmd_pwd(raw, args) {\n  return raw.trim()\n}\n",
    "static": true,
    "longname": "src/board/commands/pwd.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 125,
    "kind": "function",
    "name": "cmd_pwd",
    "memberof": "src/board/commands/pwd.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/pwd.js~cmd_pwd",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/pwd.js",
    "importStyle": "{cmd_pwd}",
    "description": "Get current working directory.\n\n### on success\n```\nreturn \"/sd/folder\"\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L373"
    ],
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "src/board/commands/remount.js",
    "content": "/**\n* Remount SD card.\n*\n* ### on success\n* ```\n* return \"remounted\"\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#324\n*/\nexport function cmd_remount(raw, args) {\n  return raw.trim()\n}\n",
    "static": true,
    "longname": "src/board/commands/remount.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "cmd_remount",
    "memberof": "src/board/commands/remount.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/remount.js~cmd_remount",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/remount.js",
    "importStyle": "{cmd_remount}",
    "description": "Remount SD card.\n\n### on success\n```\nreturn \"remounted\"\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#324"
    ],
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 128,
    "kind": "file",
    "name": "src/board/commands/reset.js",
    "content": "/**\n* Reset the board.\n*\n* ### on success\n* ```\n* return \"Smoothie out. Peace. Rebooting in 5 seconds...\\r\\n\"\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L647\n*/\nexport function cmd_reset(raw, args) {\n  return raw.trim()\n}\n",
    "static": true,
    "longname": "src/board/commands/reset.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "cmd_reset",
    "memberof": "src/board/commands/reset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/reset.js~cmd_reset",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/reset.js",
    "importStyle": "{cmd_reset}",
    "description": "Reset the board.\n\n### on success\n```\nreturn \"Smoothie out. Peace. Rebooting in 5 seconds...\\r\\n\"\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L647"
    ],
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 130,
    "kind": "file",
    "name": "src/board/commands/resume.js",
    "content": "/**\n* Parse `resume` command response.\n*\n* ### on success\n* ```\n* return [\n*   \"Restoring saved XYZ positions and state...\",\n*   \"Resuming print\",\n*   ...\n* ]\n* ```\n* ### on error\n* ```\n* return Error: 'Not suspended.'\n* return Error: 'Resume aborted by kill.'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L266\n* @see https://github.com/Smoothieware/Smoothieware/blob/1f73659f0b0cb6142e395c3d4d7dcbaadbac870a/src/modules/utils/player/Player.cpp#L594\n*/\nexport function cmd_resume(raw, args) {\n  raw = raw.trim()\n\n  if (raw.startsWith('Not suspended')) {\n    return new Error('Not suspended.')\n  }\n\n  if (! raw.startsWith('resuming print...')) {\n    return new Error('Unknown response string.')\n  }\n\n  if (raw.indexOf('Resume aborted by kill') !== -1) {\n    return new Error('Resume aborted by kill.')\n  }\n\n  let lines = raw.split('\\n').map(line => line.trim())\n\n  lines.shift()\n\n  return lines\n}\n",
    "static": true,
    "longname": "src/board/commands/resume.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 131,
    "kind": "function",
    "name": "cmd_resume",
    "memberof": "src/board/commands/resume.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/resume.js~cmd_resume",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/resume.js",
    "importStyle": "{cmd_resume}",
    "description": "Parse `resume` command response.\n\n### on success\n```\nreturn [\n  \"Restoring saved XYZ positions and state...\",\n  \"Resuming print\",\n  ...\n]\n```\n### on error\n```\nreturn Error: 'Not suspended.'\nreturn Error: 'Resume aborted by kill.'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L266",
      "https://github.com/Smoothieware/Smoothieware/blob/1f73659f0b0cb6142e395c3d4d7dcbaadbac870a/src/modules/utils/player/Player.cpp#L594"
    ],
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/board/commands/rm.js",
    "content": "import { normalizePath } from '../util'\n\n/**\n* Remove a file.\n*\n* ### on success\n* ```\n* return \"/sd/removed_file.gcode\"\n* ```\n* ### on error\n* ```\n* return Error: 'Could not remove \"xxx\".'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L331\n*/\nexport function cmd_rm(raw, args) {\n  // raw response\n  raw = raw.trim()\n\n  let source = normalizePath(args[0] || '')\n\n  // file not found\n  if (raw.startsWith('Could not delete')) {\n    return new Error('Could not remove \"' + source + '\".')\n  }\n\n  return source\n}\n",
    "static": true,
    "longname": "src/board/commands/rm.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "function",
    "name": "cmd_rm",
    "memberof": "src/board/commands/rm.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/rm.js~cmd_rm",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/rm.js",
    "importStyle": "{cmd_rm}",
    "description": "Remove a file.\n\n### on success\n```\nreturn \"/sd/removed_file.gcode\"\n```\n### on error\n```\nreturn Error: 'Could not remove \"xxx\".'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L331"
    ],
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 134,
    "kind": "file",
    "name": "src/board/commands/save.js",
    "content": "/**\n* Parse `save` command response.\n*\n* ### on success\n* ```\n* return {\n*   stored: true,\n*   file  : '/sd/config-override'\n* }\n* ```\n* ### on error\n* ```\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L542\n*/\nexport function cmd_save(raw, args) {\n  raw = raw.trim()\n\n  let matches = raw.match(/^Settings Stored to (.*)/)\n\n  if (! matches) {\n    return new Error('Unknown response string.')\n  }\n\n  return { stored: true, file: matches[1] }\n}\n",
    "static": true,
    "longname": "src/board/commands/save.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 135,
    "kind": "function",
    "name": "cmd_save",
    "memberof": "src/board/commands/save.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/save.js~cmd_save",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/save.js",
    "importStyle": "{cmd_save}",
    "description": "Parse `save` command response.\n\n### on success\n```\nreturn {\n  stored: true,\n  file  : '/sd/config-override'\n}\n```\n### on error\n```\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L542"
    ],
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "src/board/commands/set_temp.js",
    "content": "/**\n* Set temperature.\n*\n* - set_temp [bed|hotend]\n*\n* ### on success\n* ```\n* return {\n*   \"device\": \"bed\",\n*   \"target\": 180\n* }\n* ```\n* ### on error\n* ```\n* return Error: '\"xxx\" is not a known temperature device.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#857\n*/\nexport function cmd_set_temp(raw, args) {\n  // raw response\n  raw = raw.trim()\n\n  // device\n  let device = (args.shift() || '').toLowerCase()\n\n  // error\n  if (raw.endsWith('is not a known temperature device')) {\n    return new Error('\"' + device + '\" is not a known temperature device.')\n  }\n\n  // new temperature\n  let target = parseInt(args.shift() || 0)\n\n  return { device, target }\n}\n",
    "static": true,
    "longname": "src/board/commands/set_temp.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "function",
    "name": "cmd_set_temp",
    "memberof": "src/board/commands/set_temp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/set_temp.js~cmd_set_temp",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/set_temp.js",
    "importStyle": "{cmd_set_temp}",
    "description": "Set temperature.\n\n- set_temp [bed|hotend]\n\n### on success\n```\nreturn {\n  \"device\": \"bed\",\n  \"target\": 180\n}\n```\n### on error\n```\nreturn Error: '\"xxx\" is not a known temperature device.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#857"
    ],
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 138,
    "kind": "file",
    "name": "src/board/commands/suspend.js",
    "content": "/**\r\n* Parse `suspend` command response.\r\n*\r\n* ### on success\r\n* ```\r\n* return 'Suspending print, waiting for queue to empty...'\r\n* ```\r\n* ### on error\r\n* ```\r\n* return Error: 'Already suspended.'\r\n* return Error: 'Unknown response string.'\r\n* ```\r\n* @param  {String}   raw  Raw command response string.\r\n* @param  {String[]} args Command arguments.\r\n* @return {String|Error}\r\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L266\r\n* @see https://github.com/Smoothieware/Smoothieware/blob/1f73659f0b0cb6142e395c3d4d7dcbaadbac870a/src/modules/utils/player/Player.cpp#L359\r\n*/\r\nexport function cmd_suspend(raw, args) {\r\n  // raw response\r\n  raw = raw.trim()\r\n\r\n  if (raw.startsWith('Already suspended')) {\r\n    return new Error('Already suspended.')\r\n  }\r\n\r\n  if (! raw.startsWith('Suspending print')) {\r\n    return new Error('Unknown response string.')\r\n  }\r\n\r\n  return 'Suspending print, waiting for queue to empty...'\r\n}\r\n",
    "static": true,
    "longname": "src/board/commands/suspend.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "cmd_suspend",
    "memberof": "src/board/commands/suspend.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/suspend.js~cmd_suspend",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/suspend.js",
    "importStyle": "{cmd_suspend}",
    "description": "Parse `suspend` command response.\n\n### on success\n```\nreturn 'Suspending print, waiting for queue to empty...'\n```\n### on error\n```\nreturn Error: 'Already suspended.'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L266",
      "https://github.com/Smoothieware/Smoothieware/blob/1f73659f0b0cb6142e395c3d4d7dcbaadbac870a/src/modules/utils/player/Player.cpp#L359"
    ],
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 140,
    "kind": "file",
    "name": "src/board/commands/switch.js",
    "content": "/**\n* Switch module.\n*\n* `switch fan on` or `switch fan 150`\n*\n* ### on success\n* ```\n* return {\n*   \"device\": \"fan\",\n*   \"value\" : \"on\"\n* }\n* ```\n* ### on error\n* ```\n* return Error: '\"xxx\" is not a known switch device.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L916\n*/\nexport function cmd_switch(raw, args) {\n  // raw response\n  raw = raw.trim()\n\n  // device\n  let device = args.shift() || ''\n\n  // error\n  if (raw.endsWith('is not a known switch device')) {\n    return new Error('\"' + device + '\" is not a known switch device.')\n  }\n\n  return { device, value: args.shift() || '' }\n}\n",
    "static": true,
    "longname": "src/board/commands/switch.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "cmd_switch",
    "memberof": "src/board/commands/switch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/switch.js~cmd_switch",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/switch.js",
    "importStyle": "{cmd_switch}",
    "description": "Switch module.\n\n`switch fan on` or `switch fan 150`\n\n### on success\n```\nreturn {\n  \"device\": \"fan\",\n  \"value\" : \"on\"\n}\n```\n### on error\n```\nreturn Error: '\"xxx\" is not a known switch device.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L916"
    ],
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 142,
    "kind": "file",
    "name": "src/board/commands/test.js",
    "content": "import { test_jog } from './test_jog'\nimport { test_circle } from './test_circle'\nimport { test_square } from './test_square'\nimport { test_raw } from './test_raw'\n\n/**\n* Parse `break` command response.\n*\n* !!! Smoothie never respond when calling this command.\n*\n* ### on success\n* ```\n* return 'Entering MRI debug mode...'\n* ```\n* ### on error\n* ```\n* return Error: 'Usage: test <jog|circle|square|raw> <options>'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L958\n*/\nexport function cmd_test(raw, args) {\n  raw = raw.trim()\n\n  if (raw.startsWith('usage:')) {\n    return new Error('Usage: test jog|circle|square|raw options')\n  }\n\n  // option\n  let option = (args.shift() || '').toLowerCase()\n\n  let func\n\n  switch (option) {\n    case 'jog':\n    func = test_jog\n    break\n    case 'circle':\n    func = test_circle\n    break\n    case 'square':\n    func = test_square\n    break\n    case 'raw':\n    func = test_raw\n    break\n    default:\n    return new Error('Sorry! The \"test ' + option + '\" command is not (yet) implemented.')\n  }\n\n  return func(raw, args)\n}\n",
    "static": true,
    "longname": "src/board/commands/test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 143,
    "kind": "function",
    "name": "cmd_test",
    "memberof": "src/board/commands/test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/test.js~cmd_test",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/test.js",
    "importStyle": "{cmd_test}",
    "description": "Parse `break` command response.\n\n!!! Smoothie never respond when calling this command.\n\n### on success\n```\nreturn 'Entering MRI debug mode...'\n```\n### on error\n```\nreturn Error: 'Usage: test <jog|circle|square|raw> <options>'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L958"
    ],
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 144,
    "kind": "file",
    "name": "src/board/commands/test_circle.js",
    "content": "/**\n* Parse \"test circle\" response.\n*\n* ### on success\n* ```\n* return [gcode, gcode, ..., 'done']\n* ```\n* ### on error\n* ```\n* return Error: 'Usage: test circle radius iterations [feedrate]'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#989\n*/\nexport function test_circle(raw, args) {\n  if (raw.startsWith('error:')) {\n    return new Error('Usage: test circle radius iterations [feedrate]')\n  }\n\n  return raw.split('\\n')\n}\n",
    "static": true,
    "longname": "src/board/commands/test_circle.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 145,
    "kind": "function",
    "name": "test_circle",
    "memberof": "src/board/commands/test_circle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/test_circle.js~test_circle",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/test_circle.js",
    "importStyle": "{test_circle}",
    "description": "Parse \"test circle\" response.\n\n### on success\n```\nreturn [gcode, gcode, ..., 'done']\n```\n### on error\n```\nreturn Error: 'Usage: test circle radius iterations [feedrate]'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#989"
    ],
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "src/board/commands/test_jog.js",
    "content": "/**\n* Parse \"test jog\" response.\n*\n* ### on success\n* ```\n* return [gcode, gcode, ..., 'done']\n* ```\n* ### on error\n* ```\n* return Error: 'Usage: test jog axis distance iterations [feedrate]'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#962\n*/\nexport function test_jog(raw, args) {\n  if (raw.startsWith('error:')) {\n    return new Error('Usage: test jog axis distance iterations [feedrate]')\n  }\n\n  return raw.split('\\n')\n}\n",
    "static": true,
    "longname": "src/board/commands/test_jog.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "function",
    "name": "test_jog",
    "memberof": "src/board/commands/test_jog.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/test_jog.js~test_jog",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/test_jog.js",
    "importStyle": "{test_jog}",
    "description": "Parse \"test jog\" response.\n\n### on success\n```\nreturn [gcode, gcode, ..., 'done']\n```\n### on error\n```\nreturn Error: 'Usage: test jog axis distance iterations [feedrate]'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#962"
    ],
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 148,
    "kind": "file",
    "name": "src/board/commands/test_raw.js",
    "content": "/**\n* Parse \"test raw\" response.\n*\n* ### on success\n* ```\n* return [gcode, gcode, ..., 'done']\n* ```\n* ### on error\n* ```\n* return Error: 'Usage: test raw axis steps steps/sec'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#1074\n*/\nexport function test_raw(raw, args) {\n  if (raw.startsWith('error:')) {\n    return new Error('Usage: test raw axis steps steps/sec')\n  }\n\n  return raw.split('\\n')\n}\n",
    "static": true,
    "longname": "src/board/commands/test_raw.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 149,
    "kind": "function",
    "name": "test_raw",
    "memberof": "src/board/commands/test_raw.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/test_raw.js~test_raw",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/test_raw.js",
    "importStyle": "{test_raw}",
    "description": "Parse \"test raw\" response.\n\n### on success\n```\nreturn [gcode, gcode, ..., 'done']\n```\n### on error\n```\nreturn Error: 'Usage: test raw axis steps steps/sec'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#1074"
    ],
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 150,
    "kind": "file",
    "name": "src/board/commands/test_square.js",
    "content": "/**\n* Parse \"test square\" response.\n*\n* ### on success\n* ```\n* return [gcode, gcode, ..., 'done']\n* ```\n* ### on error\n* ```\n* return Error: 'Usage: test square size iterations [feedrate]'\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#1030\n*/\nexport function test_square(raw, args) {\n  if (raw.startsWith('error:')) {\n    return new Error('Usage: test square size iterations [feedrate]')\n  }\n\n  return raw.split('\\n')\n}\n",
    "static": true,
    "longname": "src/board/commands/test_square.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 151,
    "kind": "function",
    "name": "test_square",
    "memberof": "src/board/commands/test_square.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/test_square.js~test_square",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/test_square.js",
    "importStyle": "{test_square}",
    "description": "Parse \"test square\" response.\n\n### on success\n```\nreturn [gcode, gcode, ..., 'done']\n```\n### on error\n```\nreturn Error: 'Usage: test square size iterations [feedrate]'\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#1030"
    ],
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 152,
    "kind": "file",
    "name": "src/board/commands/thermistors.js",
    "content": "/**\n* Get the predefined thermistors.\n*\n* ### on success\n* ```\n* return {\n*   \"table\": {\n*     \"EPCOS100K\"    : 1,\n*     \"Vishay100K\"   : 2,\n*     \"Honeywell100K\": 3,\n*     \"Semitec\"      : 4,\n*     \"Honeywell-QAD\": 5\n*   },\n*   \"beta\": {\n*     \"EPCOS100K\"    : 129,\n*     \"RRRF100K\"     : 130,\n*     \"RRRF10K\"      : 131,\n*     \"Honeywell100K\": 132,\n*     \"Semitec\"      : 133,\n*     \"HT100K\"       : 134\n*   }\n* }\n* ```\n* ### on error\n* ```\n* return Error: 'Unknown response string.'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {String|Error}\n* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L272\n*/\nexport function cmd_thermistors(raw, args) {\n  let lines   = raw.trim().split('\\n')\n  let result  = { table: {}, beta: {} }\n  let pointer = result.table\n\n  let matches, name, value\n\n  lines.shift() // remove \"S/H table\"\n\n  lines.forEach(line => {\n    line = line.trim()\n\n    if (line.startsWith('Beta table')) {\n      pointer = result.beta\n    }\n    else {\n      matches = line.match(/^([0-9]+) - (.*)/)\n\n      if (! matches) {\n        return new Error('Unknown response string.')\n      }\n\n      name  = matches[2].trim()\n      value = parseFloat(matches[1].trim())\n\n      pointer[name] = value\n    }\n  })\n\n  return result\n}\n",
    "static": true,
    "longname": "src/board/commands/thermistors.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 153,
    "kind": "function",
    "name": "cmd_thermistors",
    "memberof": "src/board/commands/thermistors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/thermistors.js~cmd_thermistors",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/thermistors.js",
    "importStyle": "{cmd_thermistors}",
    "description": "Get the predefined thermistors.\n\n### on success\n```\nreturn {\n  \"table\": {\n    \"EPCOS100K\"    : 1,\n    \"Vishay100K\"   : 2,\n    \"Honeywell100K\": 3,\n    \"Semitec\"      : 4,\n    \"Honeywell-QAD\": 5\n  },\n  \"beta\": {\n    \"EPCOS100K\"    : 129,\n    \"RRRF100K\"     : 130,\n    \"RRRF10K\"      : 131,\n    \"Honeywell100K\": 132,\n    \"Semitec\"      : 133,\n    \"HT100K\"       : 134\n  }\n}\n```\n### on error\n```\nreturn Error: 'Unknown response string.'\n```",
    "see": [
      "https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L272"
    ],
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 154,
    "kind": "file",
    "name": "src/board/commands/version.js",
    "content": "/**\n* Parse version command response.\n*\n* ### on success\n* ```\n* return {\n*   branch: \"edge\",\n*   hash  : \"9ab4538\",\n*   date  : \"Oct 10 2016 04:09:42\",\n*   mcu   : \"LPC1769\",\n*   clock : \"120MHz\"\n* }\n* ```\n* ### on error\n* ```\n* return Error: 'Unknown response string'\n* ```\n* @param  {String}   raw  Raw command response string.\n* @param  {String[]} args Command arguments.\n* @return {Object|Error}\n*/\nexport function cmd_version(raw, args) {\n  // version pattern\n  let pattern = /Build version: (.*), Build date: (.*), MCU: (.*), System Clock: (.*)/\n\n  // test the pattern\n  let info = raw.trim().match(pattern)\n\n  if (info) {\n    // split branch-hash on dash\n    let branch = info[1].split('-')\n\n    // resolve\n    return {\n      branch: branch[0].trim(),\n      hash  : branch[1].trim(),\n      date  : info[2].trim(),\n      mcu   : info[3].trim(),\n      clock : info[4].trim()\n    }\n  }\n\n  // reject\n  return new Error('Unknown response string')\n}\n",
    "static": true,
    "longname": "src/board/commands/version.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 155,
    "kind": "function",
    "name": "cmd_version",
    "memberof": "src/board/commands/version.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/commands/version.js~cmd_version",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/commands/version.js",
    "importStyle": "{cmd_version}",
    "description": "Parse version command response.\n\n### on success\n```\nreturn {\n  branch: \"edge\",\n  hash  : \"9ab4538\",\n  date  : \"Oct 10 2016 04:09:42\",\n  mcu   : \"LPC1769\",\n  clock : \"120MHz\"\n}\n```\n### on error\n```\nreturn Error: 'Unknown response string'\n```",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "Raw command response string."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Command arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 156,
    "kind": "file",
    "name": "src/board/filetree.js",
    "content": "import { normalizePath, filename } from './util'\n\n/**\n* Board file class.\n*/\nclass BoardFile {\n  /**\n  * @param {Object} file File object from `ls -s` command.\n  */\n  constructor(file) {\n    /**\n    * Parent folder path `/sd/my_folder`.\n    * @type {String}\n    */\n    this.parent = file.parent\n\n    /**\n    * File size (bytes).\n    * @type {Integer}\n    */\n    this.size = file.size\n\n    /**\n    * File path `/sd/my_folder/my_file.ext`.\n    * @type {String}\n    */\n    this.path = file.path\n\n    /**\n    * File name with extension `my_file.ext`.\n    * @type {String}\n    */\n    this.name = file.name\n\n    /**\n    * File extension with starting dot `.gcode`.\n    * @type {String}\n    */\n    this.extension = file.extension\n  }\n}\n\n/**\n* Board folder class.\n*/\nclass BoardFolder {\n  /**\n  * @param {Object} folder Folder object from `ls -s` command.\n  */\n  constructor(folder) {\n    /**\n    * Parent folder path `/sd`.\n    * @type {String}\n    */\n    this.parent = file.parent\n\n    /**\n    * Folder size (bytes).\n    * @type {Integer}\n    */\n    this.size = file.size\n\n    /**\n    * Folder path `/sd/my_folder`.\n    * @type {String}\n    */\n    this.path = file.path\n\n    /**\n    * Folder name `my_folder`.\n    * @type {String}\n    */\n    this.name = file.name\n  }\n}\n\n/**\n* Board file tree class.\n*/\nclass BoardFileTree {\n  /**\n  * Constructor...\n  */\n  constructor() {\n    /**\n    * Flat file tree.\n    * @type {Map}\n    */\n    this.tree = new Map()\n\n    /**\n    * File tree size (bytes).\n    * @type {Integer}\n    */\n    this.size = 0\n  }\n\n  /**\n  * Make and return a child object.\n  *\n  * @param  {Object} child Child object from `ls -s` command.\n  * @return {BoardFile|BoardFolder}\n  * @protected\n  */\n  makeChild(child) {\n    return child.type === 'file' ? new BoardFile(child) : new BoardFolder(child)\n  }\n\n  /**\n  * Update tree size.\n  *\n  * @param  {BoardFile|BoardFolder} child\n  * @param  {Integer} size\n  * @protected\n  */\n  updateSize(child, size) {\n    this.size += size\n\n    let parent = this.tree.get(child.parent)\n\n    while (parent) {\n      parent.size += size\n      parent = this.tree.get(parent.parent)\n    }\n  }\n\n  /**\n  * Remove a child and all of his children.\n  *\n  * @param  {BoardFile|BoardFolder} child Child name or object to remove.\n  * @return {Integer|null} Number of child removed.\n  */\n  remove(child) {\n    let path = child.path || normalizePath(child)\n    let file = this.tree.get(path)\n\n    if (! file) {\n      return null\n    }\n\n    let removed = 1\n\n    this.tree.delete(file.path)\n    this.updateSize(file, -file.size)\n\n    if (file instanceof BoardFolder) {\n      for (let childPath of this.tree.keys()) {\n        if (childPath.startsWith(file.path + '/')) {\n          this.tree.delete(childPath)\n          removed++\n        }\n      }\n    }\n\n    return removed\n  }\n\n  /**\n  * Set a new child.\n  *\n  * @param {Object} child Child object from `ls -s` command.\n  */\n  set(child) {\n    let file = this.makeChild(child)\n\n    this.remove(file.path)\n    this.tree.set(file.path, file)\n    this.updateSize(file, file.size)\n  }\n\n  /**\n  * Return if child path exists.\n  *\n  * @param  {String} path\n  * @return {Boolean}\n  */\n  has(path) {\n    return this.tree.has(normalizePath(path))\n  }\n\n  /**\n  * Return a child from path if exists.\n  *\n  * @param  {String} path\n  * @return {BoardFile|BoardFolder|null}\n  */\n  get(path) {\n    return this.tree.get(normalizePath(path))\n  }\n\n  /**\n  * Return all children from path.\n  *\n  * @param  {String} path\n  * @return {Map}\n  */\n  list(path) {\n    let tree = new Map()\n\n    path = normalizePath(path)\n\n    if (path !== '/') {\n      path += '/'\n    }\n\n    for (let childPath of this.tree.keys()) {\n      if (childPath.startsWith(path)) {\n        tree.set(childPath, this.tree.get(childPath))\n      }\n    }\n\n    return tree\n  }\n}\n\n// Exports\nexport default BoardFileTree\nexport { BoardFileTree, BoardFolder, BoardFile }\n",
    "static": true,
    "longname": "src/board/filetree.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "class",
    "name": "BoardFileTree",
    "memberof": "src/board/filetree.js",
    "static": true,
    "longname": "src/board/filetree.js~BoardFileTree",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/filetree.js",
    "importStyle": "BoardFileTree",
    "description": "Board file tree class.",
    "lineNumber": 80,
    "interface": false
  },
  {
    "__docId__": 158,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/board/filetree.js~BoardFileTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/filetree.js~BoardFileTree#constructor",
    "access": null,
    "description": "Constructor...",
    "lineNumber": 84,
    "params": []
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "tree",
    "memberof": "src/board/filetree.js~BoardFileTree",
    "static": false,
    "longname": "src/board/filetree.js~BoardFileTree#tree",
    "access": null,
    "description": "Flat file tree.",
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "Map"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "size",
    "memberof": "src/board/filetree.js~BoardFileTree",
    "static": false,
    "longname": "src/board/filetree.js~BoardFileTree#size",
    "access": null,
    "description": "File tree size (bytes).",
    "lineNumber": 95,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "makeChild",
    "memberof": "src/board/filetree.js~BoardFileTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/filetree.js~BoardFileTree#makeChild",
    "access": "protected",
    "description": "Make and return a child object.",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "child",
        "description": "Child object from `ls -s` command."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BoardFile",
        "BoardFolder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "updateSize",
    "memberof": "src/board/filetree.js~BoardFileTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/filetree.js~BoardFileTree#updateSize",
    "access": "protected",
    "description": "Update tree size.",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "BoardFile",
          "BoardFolder"
        ],
        "spread": false,
        "optional": false,
        "name": "child",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "size",
    "memberof": "src/board/filetree.js~BoardFileTree",
    "static": false,
    "longname": "src/board/filetree.js~BoardFileTree#size",
    "access": null,
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "remove",
    "memberof": "src/board/filetree.js~BoardFileTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/filetree.js~BoardFileTree#remove",
    "access": null,
    "description": "Remove a child and all of his children.",
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "BoardFile",
          "BoardFolder"
        ],
        "spread": false,
        "optional": false,
        "name": "child",
        "description": "Child name or object to remove."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Integer",
        "null"
      ],
      "spread": false,
      "description": "Number of child removed."
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "set",
    "memberof": "src/board/filetree.js~BoardFileTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/filetree.js~BoardFileTree#set",
    "access": null,
    "description": "Set a new child.",
    "lineNumber": 163,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "child",
        "description": "Child object from `ls -s` command."
      }
    ]
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "has",
    "memberof": "src/board/filetree.js~BoardFileTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/filetree.js~BoardFileTree#has",
    "access": null,
    "description": "Return if child path exists.",
    "lineNumber": 177,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "get",
    "memberof": "src/board/filetree.js~BoardFileTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/filetree.js~BoardFileTree#get",
    "access": null,
    "description": "Return a child from path if exists.",
    "lineNumber": 187,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BoardFile",
        "BoardFolder",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 168,
    "kind": "method",
    "name": "list",
    "memberof": "src/board/filetree.js~BoardFileTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/filetree.js~BoardFileTree#list",
    "access": null,
    "description": "Return all children from path.",
    "lineNumber": 197,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Map"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 169,
    "kind": "class",
    "name": "BoardFolder",
    "memberof": "src/board/filetree.js",
    "static": true,
    "longname": "src/board/filetree.js~BoardFolder",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/filetree.js",
    "importStyle": "{BoardFolder}",
    "description": "Board folder class.",
    "lineNumber": 46,
    "interface": false
  },
  {
    "__docId__": 170,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/board/filetree.js~BoardFolder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/filetree.js~BoardFolder#constructor",
    "access": null,
    "description": "",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "folder",
        "description": "Folder object from `ls -s` command."
      }
    ]
  },
  {
    "__docId__": 171,
    "kind": "member",
    "name": "parent",
    "memberof": "src/board/filetree.js~BoardFolder",
    "static": false,
    "longname": "src/board/filetree.js~BoardFolder#parent",
    "access": null,
    "description": "Parent folder path `/sd`.",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 172,
    "kind": "member",
    "name": "size",
    "memberof": "src/board/filetree.js~BoardFolder",
    "static": false,
    "longname": "src/board/filetree.js~BoardFolder#size",
    "access": null,
    "description": "Folder size (bytes).",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 173,
    "kind": "member",
    "name": "path",
    "memberof": "src/board/filetree.js~BoardFolder",
    "static": false,
    "longname": "src/board/filetree.js~BoardFolder#path",
    "access": null,
    "description": "Folder path `/sd/my_folder`.",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 174,
    "kind": "member",
    "name": "name",
    "memberof": "src/board/filetree.js~BoardFolder",
    "static": false,
    "longname": "src/board/filetree.js~BoardFolder#name",
    "access": null,
    "description": "Folder name `my_folder`.",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 175,
    "kind": "class",
    "name": "BoardFile",
    "memberof": "src/board/filetree.js",
    "static": true,
    "longname": "src/board/filetree.js~BoardFile",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/filetree.js",
    "importStyle": "{BoardFile}",
    "description": "Board file class.",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 176,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/board/filetree.js~BoardFile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/filetree.js~BoardFile#constructor",
    "access": null,
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "File object from `ls -s` command."
      }
    ]
  },
  {
    "__docId__": 177,
    "kind": "member",
    "name": "parent",
    "memberof": "src/board/filetree.js~BoardFile",
    "static": false,
    "longname": "src/board/filetree.js~BoardFile#parent",
    "access": null,
    "description": "Parent folder path `/sd/my_folder`.",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 178,
    "kind": "member",
    "name": "size",
    "memberof": "src/board/filetree.js~BoardFile",
    "static": false,
    "longname": "src/board/filetree.js~BoardFile#size",
    "access": null,
    "description": "File size (bytes).",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 179,
    "kind": "member",
    "name": "path",
    "memberof": "src/board/filetree.js~BoardFile",
    "static": false,
    "longname": "src/board/filetree.js~BoardFile#path",
    "access": null,
    "description": "File path `/sd/my_folder/my_file.ext`.",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 180,
    "kind": "member",
    "name": "name",
    "memberof": "src/board/filetree.js~BoardFile",
    "static": false,
    "longname": "src/board/filetree.js~BoardFile#name",
    "access": null,
    "description": "File name with extension `my_file.ext`.",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 181,
    "kind": "member",
    "name": "extension",
    "memberof": "src/board/filetree.js~BoardFile",
    "static": false,
    "longname": "src/board/filetree.js~BoardFile#extension",
    "access": null,
    "description": "File extension with starting dot `.gcode`.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 182,
    "kind": "file",
    "name": "src/board/index.js",
    "content": "import Board from './board'\nimport boardTopics from './topics'\nimport * as boardCommands from './commands'\n\nexport default Board\nexport { Board, boardTopics, boardCommands }\n",
    "static": true,
    "longname": "src/board/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 183,
    "kind": "file",
    "name": "src/board/info.js",
    "content": "/**\n* Board info.\n*/\nclass BoardInfo {\n  /**\n  * @param {Object} info Object from the `version` command.\n  */\n  constructor(info) {\n    /**\n    * @type {String}\n    * @protected\n    */\n    this.branch = null\n\n    /**\n    * @type {String}\n    * @protected\n    */\n    this.hash = null\n\n    /**\n    * @type {String}\n    * @protected\n    */\n    this.date = null\n\n    /**\n    * @type {String}\n    * @protected\n    */\n    this.mcu = null\n\n    /**\n    * @type {String}\n    * @protected\n    */\n    this.clock = null\n\n    // merge info object\n    Object.assign(this, info)\n  }\n}\n\n// Exports\nexport default BoardInfo\nexport { BoardInfo }\n",
    "static": true,
    "longname": "src/board/info.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 184,
    "kind": "class",
    "name": "BoardInfo",
    "memberof": "src/board/info.js",
    "static": true,
    "longname": "src/board/info.js~BoardInfo",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/info.js",
    "importStyle": "BoardInfo",
    "description": "Board info.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 185,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/board/info.js~BoardInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/info.js~BoardInfo#constructor",
    "access": null,
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "info",
        "description": "Object from the `version` command."
      }
    ]
  },
  {
    "__docId__": 186,
    "kind": "member",
    "name": "branch",
    "memberof": "src/board/info.js~BoardInfo",
    "static": false,
    "longname": "src/board/info.js~BoardInfo#branch",
    "access": "protected",
    "description": "",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 187,
    "kind": "member",
    "name": "hash",
    "memberof": "src/board/info.js~BoardInfo",
    "static": false,
    "longname": "src/board/info.js~BoardInfo#hash",
    "access": "protected",
    "description": "",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 188,
    "kind": "member",
    "name": "date",
    "memberof": "src/board/info.js~BoardInfo",
    "static": false,
    "longname": "src/board/info.js~BoardInfo#date",
    "access": "protected",
    "description": "",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 189,
    "kind": "member",
    "name": "mcu",
    "memberof": "src/board/info.js~BoardInfo",
    "static": false,
    "longname": "src/board/info.js~BoardInfo#mcu",
    "access": "protected",
    "description": "",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "clock",
    "memberof": "src/board/info.js~BoardInfo",
    "static": false,
    "longname": "src/board/info.js~BoardInfo#clock",
    "access": "protected",
    "description": "",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 191,
    "kind": "file",
    "name": "src/board/request.js",
    "content": "import Request from '../request'\n\n/**\n* Board request.\n* @extends {Request}\n*/\nclass BoardRequest extends Request {\n  /**\n  * @param {Board}  board    Board instance.\n  * @param {Object} settings See {@link src/board/settings.js~boardSettings}.request for defaults keys/values.\n  */\n  constructor(board, settings = {}) {\n    // call parent constructor\n    super(Object.assign({}, board.settings.request, settings, {\n      url: 'http://' + board.address + '/' + settings.url\n    }))\n\n    /**\n    * Board instance.\n    * @type {String}\n    * @protected\n    */\n    this.board = board\n  }\n}\n\n// Exports\nexport default BoardRequest\nexport { BoardRequest }\n",
    "static": true,
    "longname": "src/board/request.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 192,
    "kind": "class",
    "name": "BoardRequest",
    "memberof": "src/board/request.js",
    "static": true,
    "longname": "src/board/request.js~BoardRequest",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/request.js",
    "importStyle": "BoardRequest",
    "description": "Board request.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "Request"
    ]
  },
  {
    "__docId__": 193,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/board/request.js~BoardRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/board/request.js~BoardRequest#constructor",
    "access": null,
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "Board"
        ],
        "spread": false,
        "optional": false,
        "name": "board",
        "description": "Board instance."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "settings",
        "description": "See {@link src/board/settings.js~boardSettings}.request for defaults keys/values."
      }
    ]
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "board",
    "memberof": "src/board/request.js~BoardRequest",
    "static": false,
    "longname": "src/board/request.js~BoardRequest#board",
    "access": "protected",
    "description": "Board instance.",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 195,
    "kind": "file",
    "name": "src/board/settings.js",
    "content": "/**\r\n* Defaults board settings.\r\n* @type     {Object<String, Mixed>}\r\n* @property {String}   address                       IP or hostname without protocol prefix.\r\n* @property {Object}   request                       Request settings, see {@link src/request/settings.js~requestSettings} for defaults keys/values.\r\n* @property {Integer}  [request.timeout      = 0]    Timeout for this request in milliseconds.\r\n* @property {Integer}  [request.maxAttempts  = 3]    Maximum number of attemps before rejection.\r\n* @property {Integer}  [request.attemptDelay = 1000] Delay in milliseconds between two attemps.\r\n* @property {Function} [request.filters.status]      Default to 200 OK `function(s) { return s === 200 }`.\r\n*/\r\nconst boardSettings = {\r\n  address: undefined,\r\n  request: {\r\n    timeout     : 0,\r\n    maxAttempts : 3,\r\n    attemptDelay: 1000,\r\n    filters     : { status: status => status === 200 }\r\n  }\r\n}\r\n\r\nexport default boardSettings\r\nexport { boardSettings }\r\n",
    "static": true,
    "longname": "src/board/settings.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 196,
    "kind": "variable",
    "name": "boardSettings",
    "memberof": "src/board/settings.js",
    "static": true,
    "longname": "src/board/settings.js~boardSettings",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/settings.js",
    "importStyle": "boardSettings",
    "description": "Defaults board settings.",
    "lineNumber": 11,
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "IP or hostname without protocol prefix."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "request",
        "description": "Request settings, see {@link src/request/settings.js~requestSettings} for defaults keys/values."
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 0",
        "defaultRaw": 0,
        "name": "request.timeout",
        "description": "Timeout for this request in milliseconds."
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 3",
        "defaultRaw": 3,
        "name": "request.maxAttempts",
        "description": "Maximum number of attemps before rejection."
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "request.attemptDelay",
        "description": "Delay in milliseconds between two attemps."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "request.filters.status",
        "description": "Default to 200 OK `function(s) { return s === 200 }`."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object<String, Mixed>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 197,
    "kind": "file",
    "name": "src/board/topics/index.js",
    "content": "/**\n* Board topics.\n*\n* @type {Object<String, String>}\n*/\nconst boardTopics = {\n  INFO_UPDATE    : 'info.update',     // payload: {BoardInfo}\n  FILETREE_UPDATE: 'filetree.update', // payload: {BoardFileList}\n\n  STATE_ALARM: 'state.alarm', // payload: {null}\n  STATE_CLEAR: 'state.clear', // payload: {null}\n  STATE_MRI  : 'state.mri',   // payload: {null}\n\n  COMMAND_QUEUE_ADD   : 'command.queue.add'   , // payload: {BoardCommand}\n  COMMAND_QUEUE_SEND  : 'command.queue.send'  , // payload: {BoardCommand}\n  COMMAND_QUEUE_EMPTY : 'command.queue.empty' , // payload: {null}\n  COMMAND_QUEUE_PAUSE : 'command.queue.pause' , // payload: {Board.commandQueue}\n  COMMAND_QUEUE_RESUME: 'command.queue.resume', // payload: {Board.commandQueue}\n  COMMAND_QUEUE_CLEAR : 'command.queue.clear' , // payload: {Board.commandQueue}\n\n  COMMAND_CREATE  : 'command.create',   // payload: {BoardCommand}\n  COMMAND_SEND    : 'command.send',     // payload: {BoardCommand}\n  COMMAND_ERROR   : 'command.error',    // payload: {RequestEvent}\n  COMMAND_RESPONSE: 'command.response', // payload: {RequestEvent}\n\n  // COMMAND_XXX payload: {RequestEvent}\n  COMMAND_RETRY       : 'command.retry',       // on retry planned\n  COMMAND_RETRY_SEND  : 'command.retry.send',  // juste before retry\n  COMMAND_RETRY_LIMIT : 'command.retry.limit', // on too many attemps\n\n  COMMAND_DOWNLOAD_LOAD    : 'command.download.load',\n  COMMAND_DOWNLOAD_ABORT   : 'command.download.abort',\n  COMMAND_DOWNLOAD_ERROR   : 'command.download.error',\n  COMMAND_DOWNLOAD_TIMEOUT : 'command.download.timeout',\n  COMMAND_DOWNLOAD_PROGRESS: 'command.download.progress',\n\n  COMMAND_UPLOAD_LOAD    : 'command.upload.load',\n  COMMAND_UPLOAD_ABORT   : 'command.upload.abort',\n  COMMAND_UPLOAD_ERROR   : 'command.upload.error',\n  COMMAND_UPLOAD_TIMEOUT : 'command.upload.timeout',\n  COMMAND_UPLOAD_PROGRESS: 'command.upload.progress',\n\n  // REQUEST_XXX payload: {RequestEvent}\n  REQUEST_RETRY       : 'request.retry',       // on retry planned\n  REQUEST_RETRY_SEND  : 'request.retry.send',  // juste before retry\n  REQUEST_RETRY_LIMIT : 'request.retry.limit', // on too many attemps\n\n  REQUEST_DOWNLOAD_LOAD    : 'request.download.load',\n  REQUEST_DOWNLOAD_ABORT   : 'request.download.abort',\n  REQUEST_DOWNLOAD_ERROR   : 'request.download.error',\n  REQUEST_DOWNLOAD_TIMEOUT : 'request.download.timeout',\n  REQUEST_DOWNLOAD_PROGRESS: 'request.download.progress',\n\n  REQUEST_UPLOAD_LOAD    : 'request.upload.load',\n  REQUEST_UPLOAD_ABORT   : 'request.upload.abort',\n  REQUEST_UPLOAD_ERROR   : 'request.upload.error',\n  REQUEST_UPLOAD_TIMEOUT : 'request.upload.timeout',\n  REQUEST_UPLOAD_PROGRESS: 'request.upload.progress'\n}\n\nexport default boardTopics\nexport { boardTopics }\n",
    "static": true,
    "longname": "src/board/topics/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 198,
    "kind": "variable",
    "name": "boardTopics",
    "memberof": "src/board/topics/index.js",
    "static": true,
    "longname": "src/board/topics/index.js~boardTopics",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/topics/index.js",
    "importStyle": "boardTopics",
    "description": "Board topics.",
    "lineNumber": 6,
    "type": {
      "nullable": null,
      "types": [
        "Object<String, String>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 199,
    "kind": "file",
    "name": "src/board/util.js",
    "content": "/**\n* Return normalized path `sd/My///File.ext/   ` => `/sd/my/file.ext`.\n*\n* @param  {String} path\n* @return {String}\n*/\nexport function normalizePath(path) {\n  return '/' + path.trim()\n  .replace(/\\/+/, '/')\n  .replace(/^\\/|\\/$/, '')\n  .toLowerCase()\n}\n\n/**\n* Return filename from path.\n*\n* @param  {String} path\n* @return {String}\n*/\nexport function filename(path) {\n  return path.split('/').pop()\n}\n",
    "static": true,
    "longname": "src/board/util.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 200,
    "kind": "function",
    "name": "normalizePath",
    "memberof": "src/board/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/util.js~normalizePath",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/util.js",
    "importStyle": "{normalizePath}",
    "description": "Return normalized path `sd/My///File.ext/   ` => `/sd/my/file.ext`.",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 201,
    "kind": "function",
    "name": "filename",
    "memberof": "src/board/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/board/util.js~filename",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/board/util.js",
    "importStyle": "{filename}",
    "description": "Return filename from path.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 202,
    "kind": "file",
    "name": "src/index.js",
    "content": "/**\n* API version\n* @type {String}\n*/\nexport const VERSION = '2.0.0'\n\n// public interface\nimport * as request from './request'\nimport * as board from './board'\n\nexport { request, board }\n",
    "static": true,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 203,
    "kind": "variable",
    "name": "VERSION",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~VERSION",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/index.js",
    "importStyle": "{VERSION}",
    "description": "API version",
    "lineNumber": 5,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 204,
    "kind": "file",
    "name": "src/request/event/request.js",
    "content": "/**\n* @external {ProgressEvent} https://developer.mozilla.org/fr/docs/Web/API/ProgressEvent\n*/\n\n/**\n* Request event.\n*/\nclass RequestEvent {\n  /**\n  * @param {String}        type    Event type, see {@link src/request/event/types.js} for possible values.\n  * @param {ProgressEvent} event   Original progress event.\n  * @param {Request}       request Request instance.\n  * @param {RequestProgressPayload|RequestResponsePayload|RequestAttemptPayload|Error}\n  *                        payload Request payload.\n  */\n  constructor(type, event, request, payload = null) {\n    /**\n    * Event type, see {@link src/request/event/types.js} for possible values.\n    * @type {String}\n    * @protected\n    */\n    this.type = type\n\n    /**\n    * Original progress event.\n    * @type {ProgressEvent}\n    * @protected\n    */\n    this.event = event\n\n    /**\n    * Request instance.\n    * @type {Request}\n    * @protected\n    */\n    this.request = request\n\n    /**\n    * Event payload.\n    * @type {RequestProgressPayload|RequestResponsePayload|RequestAttemptPayload|Error}\n    * @protected\n    */\n    this.payload = payload\n  }\n}\n\n// Exports\nexport default RequestEvent\nexport { RequestEvent }\n",
    "static": true,
    "longname": "src/request/event/request.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 205,
    "kind": "external",
    "name": "ProgressEvent",
    "externalLink": "https://developer.mozilla.org/fr/docs/Web/API/ProgressEvent",
    "memberof": "src/request/event/request.js",
    "static": true,
    "longname": "src/request/event/request.js~ProgressEvent",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 206,
    "kind": "class",
    "name": "RequestEvent",
    "memberof": "src/request/event/request.js",
    "static": true,
    "longname": "src/request/event/request.js~RequestEvent",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/request/event/request.js",
    "importStyle": "RequestEvent",
    "description": "Request event.",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 207,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/request/event/request.js~RequestEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/event/request.js~RequestEvent#constructor",
    "access": null,
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Event type, see {@link src/request/event/types.js} for possible values."
      },
      {
        "nullable": null,
        "types": [
          "ProgressEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Original progress event."
      },
      {
        "nullable": null,
        "types": [
          "Request"
        ],
        "spread": false,
        "optional": false,
        "name": "request",
        "description": "Request instance."
      },
      {
        "nullable": null,
        "types": [
          "RequestProgressPayload",
          "RequestResponsePayload",
          "RequestAttemptPayload",
          "Error"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": "Request payload."
      }
    ]
  },
  {
    "__docId__": 208,
    "kind": "member",
    "name": "type",
    "memberof": "src/request/event/request.js~RequestEvent",
    "static": false,
    "longname": "src/request/event/request.js~RequestEvent#type",
    "access": "protected",
    "description": "Event type, see {@link src/request/event/types.js} for possible values.",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 209,
    "kind": "member",
    "name": "event",
    "memberof": "src/request/event/request.js~RequestEvent",
    "static": false,
    "longname": "src/request/event/request.js~RequestEvent#event",
    "access": "protected",
    "description": "Original progress event.",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "ProgressEvent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 210,
    "kind": "member",
    "name": "request",
    "memberof": "src/request/event/request.js~RequestEvent",
    "static": false,
    "longname": "src/request/event/request.js~RequestEvent#request",
    "access": "protected",
    "description": "Request instance.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Request"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 211,
    "kind": "member",
    "name": "payload",
    "memberof": "src/request/event/request.js~RequestEvent",
    "static": false,
    "longname": "src/request/event/request.js~RequestEvent#payload",
    "access": "protected",
    "description": "Event payload.",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "RequestProgressPayload",
        "RequestResponsePayload",
        "RequestAttemptPayload",
        "Error"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 212,
    "kind": "file",
    "name": "src/request/event/types.js",
    "content": "/**\n* Request event types.\n*\n* @type {Object<String, String>}\n*/\nconst requestEventTypes = {\n  RETRY       : 'retry',       // on retry planned\n  RETRY_SEND  : 'retry.send',  // juste before retry\n  RETRY_LIMIT : 'retry.limit', // on too many attemps\n\n  DOWNLOAD_LOAD    : 'download.load',\n  DOWNLOAD_ABORT   : 'download.abort',\n  DOWNLOAD_ERROR   : 'download.error',\n  DOWNLOAD_TIMEOUT : 'download.timeout',\n  DOWNLOAD_PROGRESS: 'download.progress',\n\n  UPLOAD_LOAD    : 'upload.load',\n  UPLOAD_ABORT   : 'upload.abort',\n  UPLOAD_ERROR   : 'upload.error',\n  UPLOAD_TIMEOUT : 'upload.timeout',\n  UPLOAD_PROGRESS: 'upload.progress'\n}\n\nexport default requestEventTypes\nexport { requestEventTypes }\n",
    "static": true,
    "longname": "src/request/event/types.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 213,
    "kind": "variable",
    "name": "requestEventTypes",
    "memberof": "src/request/event/types.js",
    "static": true,
    "longname": "src/request/event/types.js~requestEventTypes",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/request/event/types.js",
    "importStyle": "requestEventTypes",
    "description": "Request event types.",
    "lineNumber": 6,
    "type": {
      "nullable": null,
      "types": [
        "Object<String, String>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 214,
    "kind": "file",
    "name": "src/request/index.js",
    "content": "import Request from './request'\nimport requestEventTypes from './event/types'\n\nexport default Request\nexport { Request, requestEventTypes }\n",
    "static": true,
    "longname": "src/request/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 215,
    "kind": "file",
    "name": "src/request/payload/attempt.js",
    "content": "/**\n* Attempt payload.\n*/\nclass RequestAttemptPayload {\n  /**\n  * @param {Request} request\n  */\n  constructor(request) {\n    /**\n    * Number of executed attempts.\n    * @type {Integer}\n    * @protected\n    */\n    this.done = request.attempts\n\n    /**\n    * Attempts number.\n    * @type {Integer}\n    * @protected\n    */\n    this.num = this.done + 1\n\n    /**\n    * Maximum number of attempts.\n    * @type {Integer}\n    * @protected\n    */\n    this.max = request.settings.maxAttempts\n\n    /**\n    * Delay between two attempt.\n    * @type {Integer}\n    * @protected\n    */\n    this.delay = request.settings.attemptDelay\n  }\n}\n\n// Exports\nexport default RequestAttemptPayload\nexport { RequestAttemptPayload }\n",
    "static": true,
    "longname": "src/request/payload/attempt.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 216,
    "kind": "class",
    "name": "RequestAttemptPayload",
    "memberof": "src/request/payload/attempt.js",
    "static": true,
    "longname": "src/request/payload/attempt.js~RequestAttemptPayload",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/request/payload/attempt.js",
    "importStyle": "RequestAttemptPayload",
    "description": "Attempt payload.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 217,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/request/payload/attempt.js~RequestAttemptPayload",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/payload/attempt.js~RequestAttemptPayload#constructor",
    "access": null,
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "Request"
        ],
        "spread": false,
        "optional": false,
        "name": "request",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "done",
    "memberof": "src/request/payload/attempt.js~RequestAttemptPayload",
    "static": false,
    "longname": "src/request/payload/attempt.js~RequestAttemptPayload#done",
    "access": "protected",
    "description": "Number of executed attempts.",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 219,
    "kind": "member",
    "name": "num",
    "memberof": "src/request/payload/attempt.js~RequestAttemptPayload",
    "static": false,
    "longname": "src/request/payload/attempt.js~RequestAttemptPayload#num",
    "access": "protected",
    "description": "Attempts number.",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 220,
    "kind": "member",
    "name": "max",
    "memberof": "src/request/payload/attempt.js~RequestAttemptPayload",
    "static": false,
    "longname": "src/request/payload/attempt.js~RequestAttemptPayload#max",
    "access": "protected",
    "description": "Maximum number of attempts.",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 221,
    "kind": "member",
    "name": "delay",
    "memberof": "src/request/payload/attempt.js~RequestAttemptPayload",
    "static": false,
    "longname": "src/request/payload/attempt.js~RequestAttemptPayload#delay",
    "access": "protected",
    "description": "Delay between two attempt.",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 222,
    "kind": "file",
    "name": "src/request/payload/progress.js",
    "content": "/**\n* Progression payload.\n*/\nclass RequestProgressPayload {\n  /**\n  * @param {ProgressEvent} event Original progress event.\n  */\n  constructor(event) {\n    /**\n    * Total bytes.\n    * @type {Integer}\n    * @protected\n    */\n    this.total = event.total || 0\n\n    /**\n    * Loaded bytes.\n    * @type {Integer}\n    * @protected\n    */\n    this.loaded = event.loaded || 0\n\n    /**\n    * Is computable.\n    * @type {Boolean}\n    * @protected\n    */\n    this.computable = event.lengthComputable\n\n    /**\n    * Loaded percent.\n    * @type {Integer}\n    * @protected\n    */\n    this.percent = this.computable ? parseInt(this.loaded / this.total * 100) : 0\n  }\n}\n\n// Exports\nexport default RequestProgressPayload\nexport { RequestProgressPayload }\n",
    "static": true,
    "longname": "src/request/payload/progress.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 223,
    "kind": "class",
    "name": "RequestProgressPayload",
    "memberof": "src/request/payload/progress.js",
    "static": true,
    "longname": "src/request/payload/progress.js~RequestProgressPayload",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/request/payload/progress.js",
    "importStyle": "RequestProgressPayload",
    "description": "Progression payload.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 224,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/request/payload/progress.js~RequestProgressPayload",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/payload/progress.js~RequestProgressPayload#constructor",
    "access": null,
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "ProgressEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Original progress event."
      }
    ]
  },
  {
    "__docId__": 225,
    "kind": "member",
    "name": "total",
    "memberof": "src/request/payload/progress.js~RequestProgressPayload",
    "static": false,
    "longname": "src/request/payload/progress.js~RequestProgressPayload#total",
    "access": "protected",
    "description": "Total bytes.",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 226,
    "kind": "member",
    "name": "loaded",
    "memberof": "src/request/payload/progress.js~RequestProgressPayload",
    "static": false,
    "longname": "src/request/payload/progress.js~RequestProgressPayload#loaded",
    "access": "protected",
    "description": "Loaded bytes.",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 227,
    "kind": "member",
    "name": "computable",
    "memberof": "src/request/payload/progress.js~RequestProgressPayload",
    "static": false,
    "longname": "src/request/payload/progress.js~RequestProgressPayload#computable",
    "access": "protected",
    "description": "Is computable.",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 228,
    "kind": "member",
    "name": "percent",
    "memberof": "src/request/payload/progress.js~RequestProgressPayload",
    "static": false,
    "longname": "src/request/payload/progress.js~RequestProgressPayload#percent",
    "access": "protected",
    "description": "Loaded percent.",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 229,
    "kind": "file",
    "name": "src/request/payload/response.js",
    "content": "/**\n* Response payload.\n*/\nclass RequestResponsePayload {\n  /**\n  * @param {XMLHttpRequest} xhr    An `XMLHttpRequest` instance.\n  * @param {Function}       filter Response filter.\n  */\n  constructor(xhr, filter = null) {\n    /**\n    * Response status code.\n    * @type {Integer}\n    * @protected\n    */\n    this.status = xhr.status\n\n    /**\n    * Respons status text.\n    * @type {String}\n    * @protected\n    */\n    this.message = xhr.statusText\n\n    /**\n    * Response data.\n    * @type {Mixed}\n    * @protected\n    */\n    this.data = xhr.response\n\n    if (typeof filter === 'function') {\n      this.data = filter(this.data)\n    }\n  }\n}\n\n// Exports\nexport default RequestResponsePayload\nexport { RequestResponsePayload }\n",
    "static": true,
    "longname": "src/request/payload/response.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 230,
    "kind": "class",
    "name": "RequestResponsePayload",
    "memberof": "src/request/payload/response.js",
    "static": true,
    "longname": "src/request/payload/response.js~RequestResponsePayload",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/request/payload/response.js",
    "importStyle": "RequestResponsePayload",
    "description": "Response payload.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 231,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/request/payload/response.js~RequestResponsePayload",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/payload/response.js~RequestResponsePayload#constructor",
    "access": null,
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "XMLHttpRequest"
        ],
        "spread": false,
        "optional": false,
        "name": "xhr",
        "description": "An `XMLHttpRequest` instance."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": "Response filter."
      }
    ]
  },
  {
    "__docId__": 232,
    "kind": "member",
    "name": "status",
    "memberof": "src/request/payload/response.js~RequestResponsePayload",
    "static": false,
    "longname": "src/request/payload/response.js~RequestResponsePayload#status",
    "access": "protected",
    "description": "Response status code.",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 233,
    "kind": "member",
    "name": "message",
    "memberof": "src/request/payload/response.js~RequestResponsePayload",
    "static": false,
    "longname": "src/request/payload/response.js~RequestResponsePayload#message",
    "access": "protected",
    "description": "Respons status text.",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 234,
    "kind": "member",
    "name": "data",
    "memberof": "src/request/payload/response.js~RequestResponsePayload",
    "static": false,
    "longname": "src/request/payload/response.js~RequestResponsePayload#data",
    "access": "protected",
    "description": "Response data.",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "Mixed"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 235,
    "kind": "member",
    "name": "data",
    "memberof": "src/request/payload/response.js~RequestResponsePayload",
    "static": false,
    "longname": "src/request/payload/response.js~RequestResponsePayload#data",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 236,
    "kind": "file",
    "name": "src/request/request.js",
    "content": "import uuid from 'uuid/v4'\nimport requestSettings from './settings'\nimport requestEventTypes from './event/types'\nimport RequestEvent from './event/request'\nimport RequestProgressPayload from './payload/progress'\nimport RequestResponsePayload from './payload/response'\nimport RequestAttemptPayload from './payload/attempt'\n\n/**\n* `XMLHttpRequest` wrapper with `Promise` logic.\n*\n* @example\n* function on(event) {\n*   console.info('on:', event.type, event);\n* }\n*\n* new Request({\n*   url   : 'http://192.168.1.102/command',\n*   method: 'POST',\n*   data  : 'version\\n',\n*   on    : {\n*     'retry'            : on,\n*     'retry.send'       : on,\n*     'retry.limit'      : on,\n*\n*     'download.load'    : on,\n*     'download.error'   : on,\n*     'download.abort'   : on,\n*     'download.timeout' : on,\n*     'download.progress': on,\n*\n*     'upload.load'      : on,\n*     'upload.error'     : on,\n*     'upload.abort'     : on,\n*     'upload.timeout'   : on,\n*     'upload.progress'  : on\n*   },\n*   filters: {\n*     status  : status => status === 200,\n*     response: response => JSON.stringify(response)\n*   }\n* })\n* .send()\n* .then(event => {\n*   console.info('then:', event);\n* })\n* .catch(event => {\n*   console.error('catch:', event);\n* });\n*\n* @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n* @see https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html\n*/\nclass Request {\n  /**\n  * Encode data object to uri string `key_1=value_1&key_2=value_2`.\n  *\n  * @param  {Object<String, String>} data\n  * @return {String}\n  */\n  static encodeData(data) {\n    // no data\n    if (data) {\n      // stringify data object\n      if (typeof data === 'object') {\n        data = Object.keys(data).map(key => {\n          return encodeURIComponent(key) + '=' + encodeURIComponent(data[key])\n        }).join('&')\n      }\n\n      // remove the first char if it is an '?'\n      if (data.startsWith('?')) {\n        data = data.substr(1)\n      }\n    }\n\n    return data\n  }\n\n  /**\n  * Join data to url.\n  *\n  * @param  {String}                        url\n  * @param  {String|Object<String, String>} data\n  * @return {String}\n  */\n  static joinUrlData(url, data) {\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + Request.encodeData(data)\n  }\n\n  /**\n  * @param {Object} settings See {@link src/request/settings.js~requestSettings} for defaults keys/values.\n  */\n  constructor(settings = {}) {\n    /**\n    * Request settings, see {@link src/request/settings.js~requestSettings} for defaults keys/values.\n    * @type {Object}\n    * @protected\n    */\n    this.settings = Object.assign({}, requestSettings, settings)\n\n    /**\n    * Unique identifier (uuid/v4).\n    * @type {String}\n    * @protected\n    */\n    this.uuid = uuid()\n\n    /**\n    * Creation time.\n    * @type {Integer}\n    * @protected\n    */\n    this.time = Date.now()\n\n    /**\n    * Send time.\n    * @type {Integer}\n    * @protected\n    */\n    this.sendTime = null\n\n    /**\n    * Elapsed time.\n    * @type {Integer}\n    * @protected\n    */\n    this.elapsedTime = null\n\n    /**\n    * Number of attempts.\n    * @type {Integer}\n    * @protected\n    */\n    this.attempts = 0\n\n    /**\n    * `XMLHttpRequest` instance.\n    * @type {XMLHttpRequest}\n    * @protected\n    */\n    this.xhr = null\n\n    /**\n    * Aborted flag.\n    * @type {Boolean}\n    * @protected\n    */\n    this.aborted = false\n  }\n\n  /**\n  * Trigger an user defined event.\n  *\n  * @throws {Error}\n  */\n  _triggerEvent(event) {\n    if (typeof this.settings.on[event.type] === 'function') {\n      this.settings.on[event.type](event)\n    }\n  }\n\n  /**\n  * Send the request and return a Promise.\n  *\n  * @return {Promise<RequestEvent>}\n  * @throws {Error}\n  */\n  _send() {\n    // prevent calling twice\n    if (this.xhr) {\n      throw new Error('You can not send the same request twice.')\n    }\n\n    // increment attempts counter\n    this.attempts++\n\n    // set send time\n    this.sendTime = Date.now()\n\n    // local settings\n    let settings = Object.assign({}, this.settings)\n\n    // normalize settings\n    settings.url    = settings.url.trim()\n    settings.method = settings.method.toUpperCase()\n    settings.data   = Request.encodeData(settings.data)\n\n    if (settings.method !== 'POST' && settings.data) {\n      // append data to uri and reset data\n      settings.url  = Request.joinUrlData(settings.url, settings.data)\n      settings.data = null\n    }\n\n    // wrap the request in promise\n    return new Promise((resolve, reject) => {\n      // create http request object\n      this.xhr = new XMLHttpRequest()\n\n      // override mime type\n      this.xhr.overrideMimeType(settings.mimeType)\n\n      // open async request\n      this.xhr.open(settings.method, settings.url, true)\n\n      // status\n      let rejected = false\n\n      // create, trigger and return an RequestEvent\n      let createEvent = (type, event, payload = null) => {\n        let requestEvent = new RequestEvent(type, event, this, payload)\n        ! rejected && this._triggerEvent(requestEvent)\n        return requestEvent\n      }\n\n      // on abort, error, timeout\n      let _reject = (type, event, error) => {\n        this.elapsedTime = Date.now() - this.sendTime\n        reject(createEvent(type, event, error instanceof Error ? error : new Error(error)))\n        rejected = true\n      }\n\n      let onAbort = (type, event) => {\n        this.aborted = true\n        _reject(type, event, 'Connection aborted.')\n      }\n\n      let onError = (type, event) => {\n        _reject(type, event, 'Unknown network error.')\n      }\n\n      let onTimeout = (type, event) => {\n        _reject(type, event, 'Connection timed out (>' + settings.timeout + 'ms).')\n      }\n\n      // on progress\n      let onProgress = (type, event) => {\n        createEvent(type, event, new RequestProgressPayload(event))\n      }\n\n      // on load\n      let onLoad = (type, event) => {\n        // check status\n        let status = this.xhr.status\n\n        if (! status) {\n          return _reject(requestEventTypes.DOWNLOAD_ERROR, event, 'Unknown HTTP error.')\n        }\n\n        // let user check the status\n        if (typeof settings.filters.status === 'function') {\n          status = settings.filters.status(status)\n        }\n\n        if (! status) {\n          return _reject(type, event, this.xhr.status + ' ' + this.xhr.statusText)\n        }\n\n        // response payload\n        let payload\n\n        try { // catch filter error\n          payload = new RequestResponsePayload(this.xhr, settings.filters.response)\n        }\n        catch (error) {\n          return _reject(type, event, error)\n        }\n\n        // set elapsed time\n        this.elapsedTime = Date.now() - this.sendTime\n\n        // resolve the promise\n        resolve(createEvent(type, event, payload))\n      }\n\n      let onUploaLoad = (type, event) => {\n        createEvent(type, event, settings.data)\n      }\n\n      // download events\n      this.xhr.onload     = event => onLoad(requestEventTypes.DOWNLOAD_LOAD, event)\n      this.xhr.onabort    = event => onAbort(requestEventTypes.DOWNLOAD_ABORT, event)\n      this.xhr.onerror    = event => onError(requestEventTypes.DOWNLOAD_ERROR, event)\n      this.xhr.ontimeout  = event => onTimeout(requestEventTypes.DOWNLOAD_TIMEOUT, event)\n      this.xhr.onprogress = event => onProgress(requestEventTypes.DOWNLOAD_PROGRESS, event)\n\n      // upload events\n      this.xhr.upload.onload     = event => onProgress(requestEventTypes.UPLOAD_LOAD, event)\n      this.xhr.upload.onabort    = event => onAbort(requestEventTypes.UPLOAD_ABORT, event)\n      this.xhr.upload.onerror    = event => onError(requestEventTypes.UPLOAD_ERROR, event)\n      this.xhr.upload.ontimeout  = event => onTimeout(requestEventTypes.UPLOAD_TIMEOUT, event)\n      this.xhr.upload.onprogress = event => onProgress(requestEventTypes.UPLOAD_PROGRESS, event)\n\n      // set request headers\n      if (settings.headers) {\n        for (let header in settings.headers) {\n          this.xhr.setRequestHeader(header, settings.headers[header])\n        }\n      }\n\n      // set request timeout\n      this.xhr.timeout = settings.timeout\n\n      // send the request\n      this.xhr.send(settings.data)\n\n      // dirty hack ...\n      if (this.aborted) {\n        this.xhr.abort()\n      }\n    })\n  }\n\n  /**\n  * Send the request and return a Promise.\n  *\n  * @return {Promise<RequestEvent>}\n  */\n  send() {\n    return this._send().catch(event => {\n      // trigger user callback\n      let triggerEvent = (type, event) => this._triggerEvent(\n        new RequestEvent(type, event.event, this, new RequestAttemptPayload(this))\n      )\n\n      // retry on timeout error if attempts limit is not reached\n      if (event.type.endsWith('timeout') || (event.type.endsWith('error') && event.payload.message.startsWith('Unknown network error'))) {\n        if (this.attempts < this.settings.maxAttempts) {\n          // call user callback\n          triggerEvent(requestEventTypes.BEFORE_RETRY, event)\n\n          // delayed retry\n          return new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // reset xhr object\n              this.xhr = null\n\n              // call user callback\n              triggerEvent(requestEventTypes.RETRY, event)\n\n              // (re)send the request\n              return this.send().then(resolve).catch(reject)\n            }, this.settings.attemptDelay)\n          })\n        }\n\n        // call user callback\n        triggerEvent(requestEventTypes.RETRY_LIMIT, event)\n\n        let payload = new Error('Too many attempts (max: ' + this.attempts + ').')\n        event       = new RequestEvent(requestEventTypes.DOWNLOAD_ERROR, event.event, this, payload)\n      }\n\n      return Promise.reject(event)\n    })\n  }\n\n  /**\n  * Abort the this.\n  */\n  abort() {\n    this.aborted = true\n    this.xhr && this.xhr.abort()\n  }\n}\n\nexport default Request\nexport { Request }\n",
    "static": true,
    "longname": "src/request/request.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 237,
    "kind": "class",
    "name": "Request",
    "memberof": "src/request/request.js",
    "static": true,
    "longname": "src/request/request.js~Request",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/request/request.js",
    "importStyle": "Request",
    "description": "`XMLHttpRequest` wrapper with `Promise` logic.",
    "examples": [
      "function on(event) {\n  console.info('on:', event.type, event);\n}\n\nnew Request({\n  url   : 'http://192.168.1.102/command',\n  method: 'POST',\n  data  : 'version\\n',\n  on    : {\n    'retry'            : on,\n    'retry.send'       : on,\n    'retry.limit'      : on,\n\n    'download.load'    : on,\n    'download.error'   : on,\n    'download.abort'   : on,\n    'download.timeout' : on,\n    'download.progress': on,\n\n    'upload.load'      : on,\n    'upload.error'     : on,\n    'upload.abort'     : on,\n    'upload.timeout'   : on,\n    'upload.progress'  : on\n  },\n  filters: {\n    status  : status => status === 200,\n    response: response => JSON.stringify(response)\n  }\n})\n.send()\n.then(event => {\n  console.info('then:', event);\n})\n.catch(event => {\n  console.error('catch:', event);\n});"
    ],
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
      "https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html"
    ],
    "lineNumber": 54,
    "interface": false
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "encodeData",
    "memberof": "src/request/request.js~Request",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/request/request.js~Request.encodeData",
    "access": null,
    "description": "Encode data object to uri string `key_1=value_1&key_2=value_2`.",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object<String, String>"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "joinUrlData",
    "memberof": "src/request/request.js~Request",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/request/request.js~Request.joinUrlData",
    "access": null,
    "description": "Join data to url.",
    "lineNumber": 87,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Object<String, String>"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 240,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/request/request.js~Request",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/request.js~Request#constructor",
    "access": null,
    "description": "",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "settings",
        "description": "See {@link src/request/settings.js~requestSettings} for defaults keys/values."
      }
    ]
  },
  {
    "__docId__": 241,
    "kind": "member",
    "name": "settings",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#settings",
    "access": "protected",
    "description": "Request settings, see {@link src/request/settings.js~requestSettings} for defaults keys/values.",
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 242,
    "kind": "member",
    "name": "uuid",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#uuid",
    "access": "protected",
    "description": "Unique identifier (uuid/v4).",
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 243,
    "kind": "member",
    "name": "time",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#time",
    "access": "protected",
    "description": "Creation time.",
    "lineNumber": 114,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 244,
    "kind": "member",
    "name": "sendTime",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#sendTime",
    "access": "protected",
    "description": "Send time.",
    "lineNumber": 121,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 245,
    "kind": "member",
    "name": "elapsedTime",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#elapsedTime",
    "access": "protected",
    "description": "Elapsed time.",
    "lineNumber": 128,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 246,
    "kind": "member",
    "name": "attempts",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#attempts",
    "access": "protected",
    "description": "Number of attempts.",
    "lineNumber": 135,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 247,
    "kind": "member",
    "name": "xhr",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#xhr",
    "access": "protected",
    "description": "`XMLHttpRequest` instance.",
    "lineNumber": 142,
    "type": {
      "nullable": null,
      "types": [
        "XMLHttpRequest"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 248,
    "kind": "member",
    "name": "aborted",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#aborted",
    "access": "protected",
    "description": "Aborted flag.",
    "lineNumber": 149,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "_triggerEvent",
    "memberof": "src/request/request.js~Request",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/request.js~Request#_triggerEvent",
    "access": null,
    "description": "Trigger an user defined event.",
    "lineNumber": 157,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "_send",
    "memberof": "src/request/request.js~Request",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/request.js~Request#_send",
    "access": null,
    "description": "Send the request and return a Promise.",
    "lineNumber": 169,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<RequestEvent>"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 251,
    "kind": "member",
    "name": "sendTime",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#sendTime",
    "access": null,
    "description": null,
    "lineNumber": 179,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "member",
    "name": "xhr",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#xhr",
    "access": null,
    "description": null,
    "lineNumber": 198,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "member",
    "name": "elapsedTime",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#elapsedTime",
    "access": null,
    "description": null,
    "lineNumber": 218,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "member",
    "name": "aborted",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#aborted",
    "access": null,
    "description": null,
    "lineNumber": 224,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "member",
    "name": "elapsedTime",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#elapsedTime",
    "access": null,
    "description": null,
    "lineNumber": 270,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "method",
    "name": "send",
    "memberof": "src/request/request.js~Request",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/request.js~Request#send",
    "access": null,
    "description": "Send the request and return a Promise.",
    "lineNumber": 319,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<RequestEvent>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 257,
    "kind": "member",
    "name": "xhr",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#xhr",
    "access": null,
    "description": null,
    "lineNumber": 336,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "abort",
    "memberof": "src/request/request.js~Request",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/request.js~Request#abort",
    "access": null,
    "description": "Abort the this.",
    "lineNumber": 361,
    "params": []
  },
  {
    "__docId__": 259,
    "kind": "member",
    "name": "aborted",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#aborted",
    "access": null,
    "description": null,
    "lineNumber": 362,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 260,
    "kind": "member",
    "name": "xhr",
    "memberof": "src/request/request.js~Request",
    "static": false,
    "longname": "src/request/request.js~Request#xhr",
    "access": null,
    "description": null,
    "lineNumber": 363,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "file",
    "name": "src/request/settings.js",
    "content": "/**\n* Defaults request settings.\n* @type     {Object<String, Mixed>}\n* @property {String}   [url = '/']               Absolute or relative URL.\n* @property {String}   [method = 'GET']         'GET', 'POST', 'DELETE', ...\n* @property {Mixed}    [data = null]             Data to send with the request.\n* @property {Object}   [headers = {}]            Headers to send with the request.\n* @property {Integer}  [timeout = 5000]          Timeout for this request in milliseconds.\n* @property {Integer}  [maxAttempts = 5]         Maximum number of attemps before rejection.\n* @property {Integer}  [attemptDelay = 5000]     Delay in milliseconds between two attemps.\n* @property {String}   [mimeType = 'text/plain'] Expected response mime type.\n* @property {Object}   [on = {}]                 Collection of function that takes as single parameter an {@link RequestEvent} instance.\n*                                                Ex.: `{ 'download.load': event => { }, 'upload.progress': event => { } }`\n*                                                See {@link src/request/event/types.js} for possible values.\n* @property {Object}   [filters = {}]            Collection of filter functions.\n* @property {Function} [filters.status]          A function that takes as single parameter the request status code and return an boolean to resolve/reject the request.\n* @property {Function} [filters.response]        A function that takes as single parameter the request response and return a new version or throw an {@link Error} to reject the {@link Promise}.\n*/\nconst requestSettings = {\n  url         : '/',\n  method      : 'GET',\n  data        : null,\n  headers     : {},\n  timeout     : 1000,\n  maxAttempts : 5,\n  attemptDelay: 0,\n  mimeType    : 'text/plain',\n  filters     : {},\n  on          : {}\n}\n\nexport default requestSettings\nexport { requestSettings }\n",
    "static": true,
    "longname": "src/request/settings.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 262,
    "kind": "variable",
    "name": "requestSettings",
    "memberof": "src/request/settings.js",
    "static": true,
    "longname": "src/request/settings.js~requestSettings",
    "access": null,
    "export": true,
    "importPath": "smoothie-happy/src/request/settings.js",
    "importStyle": "requestSettings",
    "description": "Defaults request settings.",
    "lineNumber": 19,
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " '/'",
        "defaultRaw": " '/'",
        "name": "url",
        "description": "Absolute or relative URL."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 'GET'",
        "defaultRaw": " 'GET'",
        "name": "method",
        "description": "'GET', 'POST', 'DELETE', ..."
      },
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " null",
        "defaultRaw": null,
        "name": "data",
        "description": "Data to send with the request."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "headers",
        "description": "Headers to send with the request."
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 5000",
        "defaultRaw": 5000,
        "name": "timeout",
        "description": "Timeout for this request in milliseconds."
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 5",
        "defaultRaw": 5,
        "name": "maxAttempts",
        "description": "Maximum number of attemps before rejection."
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 5000",
        "defaultRaw": 5000,
        "name": "attemptDelay",
        "description": "Delay in milliseconds between two attemps."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 'text/plain'",
        "defaultRaw": " 'text/plain'",
        "name": "mimeType",
        "description": "Expected response mime type."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "on",
        "description": "Collection of function that takes as single parameter an {@link RequestEvent} instance.\n                                               Ex.: `{ 'download.load': event => { }, 'upload.progress': event => { } }`\n                                               See {@link src/request/event/types.js} for possible values."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "filters",
        "description": "Collection of filter functions."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "filters.status",
        "description": "A function that takes as single parameter the request status code and return an boolean to resolve/reject the request."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "filters.response",
        "description": "A function that takes as single parameter the request response and return a new version or throw an {@link Error} to reject the {@link Promise}."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object<String, Mixed>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 264,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 265,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 266,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 267,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 268,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 269,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 270,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 271,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 272,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 273,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 274,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 275,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 276,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 277,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 278,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 279,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 280,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 281,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 282,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 283,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 284,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 285,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 286,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 287,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 288,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 289,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 290,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 291,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 292,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 293,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 294,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 295,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 296,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 297,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 298,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 299,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 300,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 301,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 302,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 303,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 304,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 305,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 306,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 307,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 308,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 309,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 310,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 312,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 313,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 314,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 315,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 316,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 317,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 318,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 319,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]