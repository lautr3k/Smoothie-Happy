import { normalizePath } from '../util'

/**
* Parse `load` command response.
*
* ### on success
* ```
* return {
*   "file"  : "/sd/config-override",
*   "config": [
*     [
*      "Steps per unit",
*      "M92 X80.00000 Y80.00000 Z1600.00000"
*     ],
*     [
*      "Acceleration mm/sec^2",
*      "M204 S3000.00000"
*     ],
*     [
*      "X- Junction Deviation, Z- Z junction deviation, S - Minimum Planner speed mm/sec",
*      "M205 X0.05000 Z-1.00000 S0.00000"
*     ],
*     [
*      "Max cartesian feedrates in mm/sec",
*      "M203 X500.00000 Y500.00000 Z5.00000"
*     ],
*     [
*      "Max actuator feedrates in mm/sec",
*      "M203.1 X500.00000 Y500.00000 Z5.00000"
*     ],
*     [
*      "WCS setting",
*      "G54"
*     ],
*     [
*      "Digipot Motor currents",
*      "M907 X1.50000 Y1.50000 Z1.50000 A1.50000"
*     ],
*     [
*      "Home offset (mm)",
*      "M206 X0.00 Y0.00 Z0.00"
*     ],
*     [
*      "E Steps per mm",
*      "M92 E140.0000 P57988"
*     ],
*     [
*      "E Filament diameter",
*      "M200 D0.0000 P57988"
*     ],
*     [
*      "E retract length, feedrate",
*      "M207 S3.0000 F2700.0000 Z0.0000 Q6000.0000 P57988"
*     ],
*     [
*      "E retract recover length, feedrate",
*      "M208 S0.0000 F480.0000 P57988"
*     ],
*     [
*      "E acceleration mm/secÂ²",
*      "M204 E500.0000 P57988"
*     ],
*     [
*      "E max feed rate mm/sec",
*      "M203 E50.0000 P57988"
*     ],
*     [
*      "PID settings",
*      "M301 S0 P10.0000 I0.3000 D200.0000 X255.0000 Y255"
*     ],
*     [
*      "Max temperature setting",
*      "M143 S0 P300.0000"
*     ],
*     [
*      "PID settings",
*      "M301 S1 P10.0000 I0.3000 D200.0000 X255.0000 Y255"
*     ],
*     [
*      "Max temperature setting",
*      "M143 S1 P300.0000"
*     ]
*   ]
* }
* ```
* ### on error
* ```
* return Error: 'File not found "xxx".'
* return Error: 'Malformed file "xxx".'
* return Error: 'Unknown response string.'
* ```
* @param  {String}   raw  Raw command response string.
* @param  {String[]} args Command arguments.
* @return {String|Error}
* @see https://github.com/Smoothieware/Smoothieware/blob/d79254323f4bb951426c6add29a4451130eaa018/src/modules/utils/simpleshell/SimpleShell.cpp#L661
*/
export function cmd_load(raw, args) {
  raw = raw.trim()

  let source = normalizePath(args[0] || '')

  if (raw.startsWith('File not found')) {
    return new Error('File not found "' + source + '".')
  }

  let matches = raw.match(/^Loading config override file: (.*).../)

  if (! matches) {
    return new Error('Unknown response string.')
  }

  let file  = matches[1]
  let lines = raw.split('\n').slice(1, -1).map(l => l.trim())
  let test  = lines.shift()

  if (! test || test !== '; DO NOT EDIT THIS FILE') {
    return new Error('Malformed file "' + source + '".')
  }

  let config = []

  for (let i = 0; i < lines.length; i += 2) {
    config.push([ lines[i].slice(1, -1), lines[i + 1] ])
  }

  return { file, config }
}
